[
  "(0, Token.Comment.Single, '# Contributor: Natanael Copa <ncopa@alpinelinux.org>')",
  "(52, Token.Text.NewLine, '\\n')",
  "(53, Token.Comment.Single, '# Maintainer: Ariadne Conill <ariadne@dereferenced.org>')",
  "(108, Token.Text.NewLine, '\\n')",
  "(109, Token.Name.Variable, 'pkgname')",
  "(116, Token.Operator.Equal, '=')",
  "(117, Token.Text, 'gcc')",
  "(120, Token.Text.NewLine, '\\n')",
  "(121, Token.Name.Variable, '_pkgbase')",
  "(129, Token.Operator.Equal, '=')",
  "(130, Token.Text, '10.3.1')",
  "(136, Token.Text.NewLine, '\\n')",
  "(137, Token.Name.Variable, 'pkgver')",
  "(143, Token.Operator.Equal, '=')",
  "(144, Token.Text, '10.3.1_git20210424')",
  "(162, Token.Text.NewLine, '\\n')",
  "(163, Token.Text, '[')",
  "(164, Token.Text.Whitespace, ' ')",
  "(165, Token.Literal.String.Double, '\"$BOOTSTRAP\"')",
  "(177, Token.Text.Whitespace, ' ')",
  "(178, Token.Text, '=')",
  "(179, Token.Text.Whitespace, ' ')",
  "(180, Token.Literal.String.Double, '\"nolibc\"')",
  "(188, Token.Text.Whitespace, ' ')",
  "(189, Token.Text, ']')",
  "(190, Token.Text.Whitespace, ' ')",
  "(191, Token.Text, '&&')",
  "(193, Token.Text.Whitespace, ' ')",
  "(194, Token.Text, 'pkgname=\"gcc-pass2\"')",
  "(213, Token.Text.NewLine, '\\n')",
  "(214, Token.Text, '[')",
  "(215, Token.Text.Whitespace, ' ')",
  "(216, Token.Literal.String.Double, '\"$CBUILD\"')",
  "(225, Token.Text.Whitespace, ' ')",
  "(226, Token.Text, '!=')",
  "(228, Token.Text.Whitespace, ' ')",
  "(229, Token.Literal.String.Double, '\"$CHOST\"')",
  "(237, Token.Text.Whitespace, ' ')",
  "(238, Token.Text, ']')",
  "(239, Token.Text.Whitespace, ' ')",
  "(240, Token.Text, '&&')",
  "(242, Token.Text.Whitespace, ' ')",
  "(243, Token.Text, '_cross=\"-$CARCH\"')",
  "(259, Token.Text.Whitespace, ' ')",
  "(260, Token.Text, '||')",
  "(262, Token.Text.Whitespace, ' ')",
  "(263, Token.Text, '_cross=\"\"')",
  "(272, Token.Text.NewLine, '\\n')",
  "(273, Token.Text, '[')",
  "(274, Token.Text.Whitespace, ' ')",
  "(275, Token.Literal.String.Double, '\"$CHOST\"')",
  "(283, Token.Text.Whitespace, ' ')",
  "(284, Token.Text, '!=')",
  "(286, Token.Text.Whitespace, ' ')",
  "(287, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(297, Token.Text.Whitespace, ' ')",
  "(298, Token.Text, ']')",
  "(299, Token.Text.Whitespace, ' ')",
  "(300, Token.Text, '&&')",
  "(302, Token.Text.Whitespace, ' ')",
  "(303, Token.Text, '_target=\"-$CTARGET_ARCH\"')",
  "(327, Token.Text.Whitespace, ' ')",
  "(328, Token.Text, '||')",
  "(330, Token.Text.Whitespace, ' ')",
  "(331, Token.Text, '_target=\"\"')",
  "(341, Token.Text.NewLine, '\\n\\n')",
  "(343, Token.Name.Variable, 'pkgname')",
  "(350, Token.Operator.Equal, '=')",
  "(351, Token.Literal.String.Double, '\"$pkgname$_target\"')",
  "(369, Token.Text.NewLine, '\\n')",
  "(370, Token.Name.Variable, 'pkgrel')",
  "(376, Token.Operator.Equal, '=')",
  "(377, Token.Text, '2')",
  "(378, Token.Text.NewLine, '\\n')",
  "(379, Token.Name.Variable, 'pkgdesc')",
  "(386, Token.Operator.Equal, '=')",
  "(387, Token.Literal.String.Double, '\"The GNU Compiler Collection\"')",
  "(416, Token.Text.NewLine, '\\n')",
  "(417, Token.Name.Variable, 'url')",
  "(420, Token.Operator.Equal, '=')",
  "(421, Token.Literal.String.Double, '\"https://gcc.gnu.org\"')",
  "(442, Token.Text.NewLine, '\\n')",
  "(443, Token.Name.Variable, 'arch')",
  "(447, Token.Operator.Equal, '=')",
  "(448, Token.Literal.String.Double, '\"all\"')",
  "(453, Token.Text.NewLine, '\\n')",
  "(454, Token.Name.Variable, 'license')",
  "(461, Token.Operator.Equal, '=')",
  "(462, Token.Literal.String.Double, '\"GPL-2.0-or-later LGPL-2.1-or-later\"')",
  "(498, Token.Text.NewLine, '\\n')",
  "(499, Token.Name.Variable, '_gccrel')",
  "(506, Token.Operator.Equal, '=')",
  "(507, Token.Text, '$pkgver-r$pkgrel')",
  "(523, Token.Text.NewLine, '\\n')",
  "(524, Token.Name.Variable, 'depends')",
  "(531, Token.Operator.Equal, '=')",
  "(532, Token.Literal.String.Double, '\"binutils$_target\"')",
  "(550, Token.Text.NewLine, '\\n')",
  "(551, Token.Name.Variable, 'makedepends_build')",
  "(568, Token.Operator.Equal, '=')",
  "(569, Token.Literal.String.Double, '\"gcc$_cross g++$_cross bison flex texinfo gawk zip gmp-dev mpfr-dev mpc1-dev zlib-dev\"')",
  "(655, Token.Text.NewLine, '\\n')",
  "(656, Token.Name.Variable, 'makedepends_host')",
  "(672, Token.Operator.Equal, '=')",
  "(673, Token.Literal.String.Double, '\"linux-headers gmp-dev mpfr-dev mpc1-dev isl-dev zlib-dev !gettext-dev libucontext-dev\"')",
  "(760, Token.Text.NewLine, '\\n')",
  "(761, Token.Name.Variable, 'subpackages')",
  "(772, Token.Operator.Equal, '=')",
  "(773, Token.Literal.String.Double, '\" \"')",
  "(776, Token.Text.NewLine, '\\n')",
  "(777, Token.Text, '[')",
  "(778, Token.Text.Whitespace, ' ')",
  "(779, Token.Literal.String.Double, '\"$CHOST\"')",
  "(787, Token.Text.Whitespace, ' ')",
  "(788, Token.Text, '=')",
  "(789, Token.Text.Whitespace, ' ')",
  "(790, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(800, Token.Text.Whitespace, ' ')",
  "(801, Token.Text, ']')",
  "(802, Token.Text.Whitespace, ' ')",
  "(803, Token.Text, '&&')",
  "(805, Token.Text.Whitespace, ' ')",
  "(806, Token.Text, 'subpackages=\"gcc-doc$_target\"')",
  "(835, Token.Text.NewLine, '\\n')",
  "(836, Token.Name.Variable, 'replaces')",
  "(844, Token.Operator.Equal, '=')",
  "(845, Token.Literal.String.Double, '\"libstdc++ binutils\"')",
  "(865, Token.Text.NewLine, '\\n\\n')",
  "(867, Token.Text, ':')",
  "(868, Token.Text.Whitespace, ' ')",
  "(869, Token.Literal.String.Double, '\"${LANG_CXX:=true}\"')",
  "(888, Token.Text.NewLine, '\\n')",
  "(889, Token.Text, ':')",
  "(890, Token.Text.Whitespace, ' ')",
  "(891, Token.Literal.String.Double, '\"${LANG_D:=true}\"')",
  "(908, Token.Text.NewLine, '\\n')",
  "(909, Token.Text, ':')",
  "(910, Token.Text.Whitespace, ' ')",
  "(911, Token.Literal.String.Double, '\"${LANG_OBJC:=true}\"')",
  "(931, Token.Text.NewLine, '\\n')",
  "(932, Token.Text, ':')",
  "(933, Token.Text.Whitespace, ' ')",
  "(934, Token.Literal.String.Double, '\"${LANG_GO:=true}\"')",
  "(952, Token.Text.NewLine, '\\n')",
  "(953, Token.Text, ':')",
  "(954, Token.Text.Whitespace, ' ')",
  "(955, Token.Literal.String.Double, '\"${LANG_FORTRAN:=true}\"')",
  "(978, Token.Text.NewLine, '\\n')",
  "(979, Token.Text, ':')",
  "(980, Token.Text.Whitespace, ' ')",
  "(981, Token.Literal.String.Double, '\"${LANG_ADA:=true}\"')",
  "(1000, Token.Text.NewLine, '\\n\\n')",
  "(1002, Token.Name.Variable, '_libgomp')",
  "(1010, Token.Operator.Equal, '=')",
  "(1011, Token.Text, 'true')",
  "(1015, Token.Text.NewLine, '\\n')",
  "(1016, Token.Name.Variable, '_libgcc')",
  "(1023, Token.Operator.Equal, '=')",
  "(1024, Token.Text, 'true')",
  "(1028, Token.Text.NewLine, '\\n')",
  "(1029, Token.Name.Variable, '_libatomic')",
  "(1039, Token.Operator.Equal, '=')",
  "(1040, Token.Text, 'true')",
  "(1044, Token.Text.NewLine, '\\n')",
  "(1045, Token.Name.Variable, '_libitm')",
  "(1052, Token.Operator.Equal, '=')",
  "(1053, Token.Text, 'true')",
  "(1057, Token.Text.NewLine, '\\n\\n')",
  "(1059, Token.Text, 'if')",
  "(1061, Token.Text.Whitespace, ' ')",
  "(1062, Token.Text, '[')",
  "(1063, Token.Text.Whitespace, ' ')",
  "(1064, Token.Literal.String.Double, '\"$CHOST\"')",
  "(1072, Token.Text.Whitespace, ' ')",
  "(1073, Token.Text, '!=')",
  "(1075, Token.Text.Whitespace, ' ')",
  "(1076, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(1086, Token.Text.Whitespace, ' ')",
  "(1087, Token.Text, '];')",
  "(1089, Token.Text.Whitespace, ' ')",
  "(1090, Token.Text, 'then')",
  "(1094, Token.Text.NewLine, '\\n')",
  "(1095, Token.Text.Whitespace, '\\t')",
  "(1096, Token.Text, 'if')",
  "(1098, Token.Text.Whitespace, ' ')",
  "(1099, Token.Text, '[')",
  "(1100, Token.Text.Whitespace, ' ')",
  "(1101, Token.Literal.String.Double, '\"$BOOTSTRAP\"')",
  "(1113, Token.Text.Whitespace, ' ')",
  "(1114, Token.Text, '=')",
  "(1115, Token.Text.Whitespace, ' ')",
  "(1116, Token.Text, 'nolibc')",
  "(1122, Token.Text.Whitespace, ' ')",
  "(1123, Token.Text, '];')",
  "(1125, Token.Text.Whitespace, ' ')",
  "(1126, Token.Text, 'then')",
  "(1130, Token.Text.NewLine, '\\n')",
  "(1131, Token.Text.Whitespace, '\\t\\t')",
  "(1133, Token.Text, 'LANG_CXX=false')",
  "(1147, Token.Text.NewLine, '\\n')",
  "(1148, Token.Text.Whitespace, '\\t\\t')",
  "(1150, Token.Text, 'LANG_ADA=false')",
  "(1164, Token.Text.NewLine, '\\n')",
  "(1165, Token.Text.Whitespace, '\\t\\t')",
  "(1167, Token.Text, '_libgcc=false')",
  "(1180, Token.Text.NewLine, '\\n')",
  "(1181, Token.Text.Whitespace, '\\t\\t')",
  "(1183, Token.Text, '_builddir=\"$srcdir/build-cross-pass2\"')",
  "(1220, Token.Text.NewLine, '\\n')",
  "(1221, Token.Text.Whitespace, '\\t')",
  "(1222, Token.Text, 'else')",
  "(1226, Token.Text.NewLine, '\\n')",
  "(1227, Token.Text.Whitespace, '\\t\\t')",
  "(1229, Token.Text, '_builddir=\"$srcdir/build-cross-final\"')",
  "(1266, Token.Text.NewLine, '\\n')",
  "(1267, Token.Text.Whitespace, '\\t')",
  "(1268, Token.Text, 'fi')",
  "(1270, Token.Text.NewLine, '\\n')",
  "(1271, Token.Text.Whitespace, '\\t')",
  "(1272, Token.Text, 'LANG_OBJC=false')",
  "(1287, Token.Text.NewLine, '\\n')",
  "(1288, Token.Text.Whitespace, '\\t')",
  "(1289, Token.Text, 'LANG_GO=false')",
  "(1302, Token.Text.NewLine, '\\n')",
  "(1303, Token.Text.Whitespace, '\\t')",
  "(1304, Token.Text, 'LANG_FORTRAN=false')",
  "(1322, Token.Text.NewLine, '\\n')",
  "(1323, Token.Text.Whitespace, '\\t')",
  "(1324, Token.Text, 'LANG_D=false')",
  "(1336, Token.Text.NewLine, '\\n')",
  "(1337, Token.Text.Whitespace, '\\t')",
  "(1338, Token.Text, '_libgomp=false')",
  "(1352, Token.Text.NewLine, '\\n')",
  "(1353, Token.Text.Whitespace, '\\t')",
  "(1354, Token.Text, '_libatomic=false')",
  "(1370, Token.Text.NewLine, '\\n')",
  "(1371, Token.Text.Whitespace, '\\t')",
  "(1372, Token.Text, '_libitm=false')",
  "(1385, Token.Text.NewLine, '\\n\\n')",
  "(1387, Token.Text.Whitespace, '\\t')",
  "(1388, Token.Comment.Single, '# reset target flags (should be set in crosscreate abuild)')",
  "(1446, Token.Text.NewLine, '\\n')",
  "(1447, Token.Text.Whitespace, '\\t')",
  "(1448, Token.Comment.Single, '# fixup flags. seems gcc treats CPPFLAGS as global without')",
  "(1506, Token.Text.NewLine, '\\n')",
  "(1507, Token.Text.Whitespace, '\\t')",
  "(1508, Token.Comment.Single, '# _FOR_xxx variants. wrap it in CFLAGS and CXXFLAGS.')",
  "(1560, Token.Text.NewLine, '\\n')",
  "(1561, Token.Text.Whitespace, '\\t')",
  "(1562, Token.Text, 'export')",
  "(1568, Token.Text.Whitespace, ' ')",
  "(1569, Token.Text, 'CFLAGS=\"$CPPFLAGS')",
  "(1586, Token.Text.Whitespace, ' ')",
  "(1587, Token.Text, '$CFLAGS\"')",
  "(1595, Token.Text.NewLine, '\\n')",
  "(1596, Token.Text.Whitespace, '\\t')",
  "(1597, Token.Text, 'export')",
  "(1603, Token.Text.Whitespace, ' ')",
  "(1604, Token.Text, 'CXXFLAGS=\"$CPPFLAGS')",
  "(1623, Token.Text.Whitespace, ' ')",
  "(1624, Token.Text, '$CXXFLAGS\"')",
  "(1634, Token.Text.NewLine, '\\n')",
  "(1635, Token.Text.Whitespace, '\\t')",
  "(1636, Token.Text, 'unset')",
  "(1641, Token.Text.Whitespace, ' ')",
  "(1642, Token.Text, 'CPPFLAGS')",
  "(1650, Token.Text.NewLine, '\\n')",
  "(1651, Token.Text.Whitespace, '\\t')",
  "(1652, Token.Text, 'export')",
  "(1658, Token.Text.Whitespace, ' ')",
  "(1659, Token.Text, 'CFLAGS_FOR_TARGET=\"')",
  "(1678, Token.Text.Whitespace, ' ')",
  "(1679, Token.Literal.String.Double, '\"\\n\\texport CXXFLAGS_FOR_TARGET=\"')",
  "(1710, Token.Text.Whitespace, ' ')",
  "(1711, Token.Literal.String.Double, '\"\\n\\texport LDFLAGS_FOR_TARGET=\"')",
  "(1741, Token.Text.Whitespace, ' ')",
  "(1742, Token.Literal.String.Double, '\"\\n\\n\\tSTRIP_FOR_TARGET=\"')",
  "(1764, Token.Text, '$CTARGET-strip\"')",
  "(1779, Token.Text.NewLine, '\\n')",
  "(1780, Token.Text, 'elif')",
  "(1784, Token.Text.Whitespace, ' ')",
  "(1785, Token.Text, '[')",
  "(1786, Token.Text.Whitespace, ' ')",
  "(1787, Token.Literal.String.Double, '\"$CBUILD\"')",
  "(1796, Token.Text.Whitespace, ' ')",
  "(1797, Token.Text, '!=')",
  "(1799, Token.Text.Whitespace, ' ')",
  "(1800, Token.Literal.String.Double, '\"$CHOST\"')",
  "(1808, Token.Text.Whitespace, ' ')",
  "(1809, Token.Text, '];')",
  "(1811, Token.Text.Whitespace, ' ')",
  "(1812, Token.Text, 'then')",
  "(1816, Token.Text.NewLine, '\\n')",
  "(1817, Token.Text.Whitespace, '\\t')",
  "(1818, Token.Comment.Single, '# fixup flags. seems gcc treats CPPFLAGS as global without')",
  "(1876, Token.Text.NewLine, '\\n')",
  "(1877, Token.Text.Whitespace, '\\t')",
  "(1878, Token.Comment.Single, '# _FOR_xxx variants. wrap it in CFLAGS and CXXFLAGS.')",
  "(1930, Token.Text.NewLine, '\\n')",
  "(1931, Token.Text.Whitespace, '\\t')",
  "(1932, Token.Text, 'export')",
  "(1938, Token.Text.Whitespace, ' ')",
  "(1939, Token.Text, 'CFLAGS=\"$CPPFLAGS')",
  "(1956, Token.Text.Whitespace, ' ')",
  "(1957, Token.Text, '$CFLAGS\"')",
  "(1965, Token.Text.NewLine, '\\n')",
  "(1966, Token.Text.Whitespace, '\\t')",
  "(1967, Token.Text, 'export')",
  "(1973, Token.Text.Whitespace, ' ')",
  "(1974, Token.Text, 'CXXFLAGS=\"$CPPFLAGS')",
  "(1993, Token.Text.Whitespace, ' ')",
  "(1994, Token.Text, '$CXXFLAGS\"')",
  "(2004, Token.Text.NewLine, '\\n')",
  "(2005, Token.Text.Whitespace, '\\t')",
  "(2006, Token.Text, 'unset')",
  "(2011, Token.Text.Whitespace, ' ')",
  "(2012, Token.Text, 'CPPFLAGS')",
  "(2020, Token.Text.NewLine, '\\n\\n')",
  "(2022, Token.Text.Whitespace, '\\t')",
  "(2023, Token.Comment.Single, '# reset flags and cc for build')",
  "(2053, Token.Text.NewLine, '\\n')",
  "(2054, Token.Text.Whitespace, '\\t')",
  "(2055, Token.Text, 'export')",
  "(2061, Token.Text.Whitespace, ' ')",
  "(2062, Token.Text, 'CC_FOR_BUILD=\"gcc\"')",
  "(2080, Token.Text.NewLine, '\\n')",
  "(2081, Token.Text.Whitespace, '\\t')",
  "(2082, Token.Text, 'export')",
  "(2088, Token.Text.Whitespace, ' ')",
  "(2089, Token.Text, 'CXX_FOR_BUILD=\"g++\"')",
  "(2108, Token.Text.NewLine, '\\n')",
  "(2109, Token.Text.Whitespace, '\\t')",
  "(2110, Token.Text, 'export')",
  "(2116, Token.Text.Whitespace, ' ')",
  "(2117, Token.Text, 'CFLAGS_FOR_BUILD=\"')",
  "(2135, Token.Text.Whitespace, ' ')",
  "(2136, Token.Literal.String.Double, '\"\\n\\texport CXXFLAGS_FOR_BUILD=\"')",
  "(2166, Token.Text.Whitespace, ' ')",
  "(2167, Token.Literal.String.Double, '\"\\n\\texport LDFLAGS_FOR_BUILD=\"')",
  "(2196, Token.Text.Whitespace, ' ')",
  "(2197, Token.Literal.String.Double, '\"\\n\\texport CFLAGS_FOR_TARGET=\"')",
  "(2226, Token.Text.Whitespace, ' ')",
  "(2227, Token.Literal.String.Double, '\"\\n\\texport CXXFLAGS_FOR_TARGET=\"')",
  "(2258, Token.Text.Whitespace, ' ')",
  "(2259, Token.Literal.String.Double, '\"\\n\\texport LDFLAGS_FOR_TARGET=\"')",
  "(2289, Token.Text.Whitespace, ' ')",
  "(2290, Token.Literal.String.Double, '\"\\n\\n\\t# Languages that do not need bootstrapping\\n\\tLANG_OBJC=false\\n\\tLANG_GO=false\\n\\tLANG_FORTRAN=false\\n\\tLANG_D=false\\n\\n\\tSTRIP_FOR_TARGET=${CROSS_COMPILE}strip\\n\\t_builddir=\"')",
  "(2456, Token.Text, '$srcdir/build-cross-native\"')",
  "(2483, Token.Text.NewLine, '\\n')",
  "(2484, Token.Text, 'else')",
  "(2488, Token.Text.NewLine, '\\n')",
  "(2489, Token.Text.Whitespace, '\\t')",
  "(2490, Token.Text, 'STRIP_FOR_TARGET=${CROSS_COMPILE}strip')",
  "(2528, Token.Text.NewLine, '\\n')",
  "(2529, Token.Text.Whitespace, '\\t')",
  "(2530, Token.Text, '_builddir=\"$srcdir/build\"')",
  "(2555, Token.Text.NewLine, '\\n')",
  "(2556, Token.Text, 'fi')",
  "(2558, Token.Text.NewLine, '\\n\\n')",
  "(2560, Token.Comment.Single, \"# GDC hasn't been ported to PowerPC\")",
  "(2595, Token.Text.NewLine, '\\n')",
  "(2596, Token.Comment.Single, '# See libphobos/configure.tgt in GCC sources for supported targets')",
  "(2662, Token.Text.NewLine, '\\n')",
  "(2663, Token.Comment.Single, '# riscv fails with: error: static assert  \"unimplemented\"')",
  "(2720, Token.Text.NewLine, '\\n')",
  "(2721, Token.Text, 'case')",
  "(2725, Token.Text.Whitespace, ' ')",
  "(2726, Token.Literal.String.Double, '\"$CARCH\"')",
  "(2734, Token.Text.Whitespace, ' ')",
  "(2735, Token.Text, 'in')",
  "(2737, Token.Text.NewLine, '\\n')",
  "(2738, Token.Text, 'ppc64le|riscv64)')",
  "(2754, Token.Text.Whitespace, '\\t')",
  "(2755, Token.Text, 'LANG_D=false')",
  "(2767, Token.Text.Whitespace, ' ')",
  "(2768, Token.Text, ';;')",
  "(2770, Token.Text.NewLine, '\\n')",
  "(2771, Token.Text, 'esac')",
  "(2775, Token.Text.NewLine, '\\n\\n')",
  "(2777, Token.Comment.Single, '# libitm has TEXTRELs in ARM build, so disable for now')",
  "(2831, Token.Text.NewLine, '\\n')",
  "(2832, Token.Text, 'case')",
  "(2836, Token.Text.Whitespace, ' ')",
  "(2837, Token.Literal.String.Double, '\"$CTARGET_ARCH\"')",
  "(2852, Token.Text.Whitespace, ' ')",
  "(2853, Token.Text, 'in')",
  "(2855, Token.Text.NewLine, '\\n')",
  "(2856, Token.Text, 'arm*)')",
  "(2861, Token.Text.Whitespace, '\\t\\t')",
  "(2863, Token.Text, '_libitm=false')",
  "(2876, Token.Text.Whitespace, ' ')",
  "(2877, Token.Text, ';;')",
  "(2879, Token.Text.NewLine, '\\n')",
  "(2880, Token.Text, 'mips*)')",
  "(2886, Token.Text.Whitespace, '\\t\\t')",
  "(2888, Token.Text, '_libitm=false')",
  "(2901, Token.Text.Whitespace, ' ')",
  "(2902, Token.Text, ';;')",
  "(2904, Token.Text.NewLine, '\\n')",
  "(2905, Token.Text, 'riscv64)')",
  "(2913, Token.Text.Whitespace, '\\t')",
  "(2914, Token.Text, '_libitm=false')",
  "(2927, Token.Text.Whitespace, ' ')",
  "(2928, Token.Text, ';;')",
  "(2930, Token.Text.NewLine, '\\n')",
  "(2931, Token.Text, 'esac')",
  "(2935, Token.Text.NewLine, '\\n\\n')",
  "(2937, Token.Comment.Single, '# Internal libffi fails to build on MIPS at the moment, need to')",
  "(3000, Token.Text.NewLine, '\\n')",
  "(3001, Token.Comment.Single, '# investigate further.  We disable LANG_GO on mips64 as it requires')",
  "(3068, Token.Text.NewLine, '\\n')",
  "(3069, Token.Comment.Single, '# the internal libffi.')",
  "(3091, Token.Text.NewLine, '\\n')",
  "(3092, Token.Text, 'case')",
  "(3096, Token.Text.Whitespace, ' ')",
  "(3097, Token.Literal.String.Double, '\"$CTARGET_ARCH\"')",
  "(3112, Token.Text.Whitespace, ' ')",
  "(3113, Token.Text, 'in')",
  "(3115, Token.Text.NewLine, '\\n')",
  "(3116, Token.Text, 'mips*)')",
  "(3122, Token.Text.Whitespace, '\\t\\t')",
  "(3124, Token.Text, 'LANG_GO=false')",
  "(3137, Token.Text.Whitespace, ' ')",
  "(3138, Token.Text, ';;')",
  "(3140, Token.Text.NewLine, '\\n')",
  "(3141, Token.Text, 'esac')",
  "(3145, Token.Text.NewLine, '\\n\\n')",
  "(3147, Token.Comment.Single, '# Fortran uses libquadmath if toolchain has __float128')",
  "(3201, Token.Text.NewLine, '\\n')",
  "(3202, Token.Comment.Single, '# currently on x86, x86_64 and ia64')",
  "(3237, Token.Text.NewLine, '\\n')",
  "(3238, Token.Name.Variable, '_libquadmath')",
  "(3250, Token.Operator.Equal, '=')",
  "(3251, Token.Text, '$LANG_FORTRAN')",
  "(3264, Token.Text.NewLine, '\\n')",
  "(3265, Token.Text, 'case')",
  "(3269, Token.Text.Whitespace, ' ')",
  "(3270, Token.Literal.String.Double, '\"$CTARGET_ARCH\"')",
  "(3285, Token.Text.Whitespace, ' ')",
  "(3286, Token.Text, 'in')",
  "(3288, Token.Text.NewLine, '\\n')",
  "(3289, Token.Text, 'x86')",
  "(3292, Token.Text.Whitespace, ' ')",
  "(3293, Token.Text, '|')",
  "(3294, Token.Text.Whitespace, ' ')",
  "(3295, Token.Text, 'x86_64)')",
  "(3302, Token.Text.Whitespace, '\\t')",
  "(3303, Token.Text, '_libquadmath=$LANG_FORTRAN')",
  "(3329, Token.Text.Whitespace, ' ')",
  "(3330, Token.Text, ';;')",
  "(3332, Token.Text.NewLine, '\\n')",
  "(3333, Token.Text, '*)')",
  "(3335, Token.Text.Whitespace, '\\t\\t')",
  "(3337, Token.Text, '_libquadmath=false')",
  "(3355, Token.Text.Whitespace, ' ')",
  "(3356, Token.Text, ';;')",
  "(3358, Token.Text.NewLine, '\\n')",
  "(3359, Token.Text, 'esac')",
  "(3363, Token.Text.NewLine, '\\n\\n')",
  "(3365, Token.Comment.Single, '# libatomic is a dependency for openvswitch')",
  "(3408, Token.Text.NewLine, '\\n')",
  "(3409, Token.Text, '$_libatomic')",
  "(3420, Token.Text.Whitespace, ' ')",
  "(3421, Token.Text, '&&')",
  "(3423, Token.Text.Whitespace, ' ')",
  "(3424, Token.Text, 'subpackages=\"$subpackages')",
  "(3449, Token.Text.Whitespace, ' ')",
  "(3450, Token.Text, 'libatomic::$CTARGET_ARCH\"')",
  "(3475, Token.Text.NewLine, '\\n')",
  "(3476, Token.Text, '$_libgcc')",
  "(3484, Token.Text.Whitespace, ' ')",
  "(3485, Token.Text, '&&')",
  "(3487, Token.Text.Whitespace, ' ')",
  "(3488, Token.Text, 'subpackages=\"$subpackages')",
  "(3513, Token.Text.Whitespace, ' ')",
  "(3514, Token.Text, 'libgcc::$CTARGET_ARCH\"')",
  "(3536, Token.Text.NewLine, '\\n')",
  "(3537, Token.Text, '$_libquadmath')",
  "(3550, Token.Text.Whitespace, ' ')",
  "(3551, Token.Text, '&&')",
  "(3553, Token.Text.Whitespace, ' ')",
  "(3554, Token.Text, 'subpackages=\"$subpackages')",
  "(3579, Token.Text.Whitespace, ' ')",
  "(3580, Token.Text, 'libquadmath::$CTARGET_ARCH\"')",
  "(3607, Token.Text.NewLine, '\\n')",
  "(3608, Token.Text, 'if')",
  "(3610, Token.Text.Whitespace, ' ')",
  "(3611, Token.Text, '$_libgomp;')",
  "(3621, Token.Text.Whitespace, ' ')",
  "(3622, Token.Text, 'then')",
  "(3626, Token.Text.NewLine, '\\n')",
  "(3627, Token.Text.Whitespace, '\\t')",
  "(3628, Token.Text, 'depends=\"$depends')",
  "(3645, Token.Text.Whitespace, ' ')",
  "(3646, Token.Text, 'libgomp=$_gccrel\"')",
  "(3663, Token.Text.NewLine, '\\n')",
  "(3664, Token.Text.Whitespace, '\\t')",
  "(3665, Token.Text, 'subpackages=\"$subpackages')",
  "(3690, Token.Text.Whitespace, ' ')",
  "(3691, Token.Text, 'libgomp::$CTARGET_ARCH\"')",
  "(3714, Token.Text.NewLine, '\\n')",
  "(3715, Token.Text, 'fi')",
  "(3717, Token.Text.NewLine, '\\n\\n')",
  "(3719, Token.Text, 'case')",
  "(3723, Token.Text.Whitespace, ' ')",
  "(3724, Token.Literal.String.Double, '\"$CARCH\"')",
  "(3732, Token.Text.Whitespace, ' ')",
  "(3733, Token.Text, 'in')",
  "(3735, Token.Text.NewLine, '\\n')",
  "(3736, Token.Text, 'riscv64)')",
  "(3744, Token.Text.NewLine, '\\n')",
  "(3745, Token.Name.Variable, 'LANG_ADA')",
  "(3753, Token.Operator.Equal, '=')",
  "(3754, Token.Text, 'false;;')",
  "(3761, Token.Text.NewLine, '\\n')",
  "(3762, Token.Text, 'esac')",
  "(3766, Token.Text.NewLine, '\\n\\n')",
  "(3768, Token.Name.Variable, '_languages')",
  "(3778, Token.Operator.Equal, '=')",
  "(3779, Token.Text, 'c')",
  "(3780, Token.Text.NewLine, '\\n')",
  "(3781, Token.Text, 'if')",
  "(3783, Token.Text.Whitespace, ' ')",
  "(3784, Token.Text, '$LANG_CXX;')",
  "(3794, Token.Text.Whitespace, ' ')",
  "(3795, Token.Text, 'then')",
  "(3799, Token.Text.NewLine, '\\n')",
  "(3800, Token.Text.Whitespace, '\\t')",
  "(3801, Token.Text, 'subpackages=\"$subpackages')",
  "(3826, Token.Text.Whitespace, ' ')",
  "(3827, Token.Text, 'libstdc++:libcxx:$CTARGET_ARCH')",
  "(3857, Token.Text.Whitespace, ' ')",
  "(3858, Token.Text, 'g++$_target:gpp\"')",
  "(3874, Token.Text.NewLine, '\\n')",
  "(3875, Token.Text.Whitespace, '\\t')",
  "(3876, Token.Text, '_languages=\"$_languages,c++\"')",
  "(3904, Token.Text.NewLine, '\\n')",
  "(3905, Token.Text, 'fi')",
  "(3907, Token.Text.NewLine, '\\n')",
  "(3908, Token.Text, 'if')",
  "(3910, Token.Text.Whitespace, ' ')",
  "(3911, Token.Text, '$LANG_D;')",
  "(3919, Token.Text.Whitespace, ' ')",
  "(3920, Token.Text, 'then')",
  "(3924, Token.Text.NewLine, '\\n')",
  "(3925, Token.Text.Whitespace, '\\t')",
  "(3926, Token.Text, 'subpackages=\"$subpackages')",
  "(3951, Token.Text.Whitespace, ' ')",
  "(3952, Token.Text, 'libgphobos::$CTARGET_ARCH')",
  "(3977, Token.Text.Whitespace, ' ')",
  "(3978, Token.Text, 'gcc-gdc$_target:gdc\"')",
  "(3998, Token.Text.NewLine, '\\n')",
  "(3999, Token.Text.Whitespace, '\\t')",
  "(4000, Token.Text, '_languages=\"$_languages,d\"')",
  "(4026, Token.Text.NewLine, '\\n')",
  "(4027, Token.Text.Whitespace, '\\t')",
  "(4028, Token.Text, 'makedepends_build=\"$makedepends_build')",
  "(4065, Token.Text.Whitespace, ' ')",
  "(4066, Token.Text, 'libucontext-dev\"')",
  "(4082, Token.Text.NewLine, '\\n')",
  "(4083, Token.Text, 'fi')",
  "(4085, Token.Text.NewLine, '\\n')",
  "(4086, Token.Text, 'if')",
  "(4088, Token.Text.Whitespace, ' ')",
  "(4089, Token.Text, '$LANG_OBJC;')",
  "(4100, Token.Text.Whitespace, ' ')",
  "(4101, Token.Text, 'then')",
  "(4105, Token.Text.NewLine, '\\n')",
  "(4106, Token.Text.Whitespace, '\\t')",
  "(4107, Token.Text, 'subpackages=\"$subpackages')",
  "(4132, Token.Text.Whitespace, ' ')",
  "(4133, Token.Text, 'libobjc::$CTARGET_ARCH')",
  "(4155, Token.Text.Whitespace, ' ')",
  "(4156, Token.Text, 'gcc-objc$_target:objc\"')",
  "(4178, Token.Text.NewLine, '\\n')",
  "(4179, Token.Text.Whitespace, '\\t')",
  "(4180, Token.Text, '_languages=\"$_languages,objc\"')",
  "(4209, Token.Text.NewLine, '\\n')",
  "(4210, Token.Text, 'fi')",
  "(4212, Token.Text.NewLine, '\\n')",
  "(4213, Token.Text, 'if')",
  "(4215, Token.Text.Whitespace, ' ')",
  "(4216, Token.Text, '$LANG_GO;')",
  "(4225, Token.Text.Whitespace, ' ')",
  "(4226, Token.Text, 'then')",
  "(4230, Token.Text.NewLine, '\\n')",
  "(4231, Token.Text.Whitespace, '\\t')",
  "(4232, Token.Text, 'subpackages=\"$subpackages')",
  "(4257, Token.Text.Whitespace, ' ')",
  "(4258, Token.Text, 'libgo::$CTARGET_ARCH')",
  "(4278, Token.Text.Whitespace, ' ')",
  "(4279, Token.Text, 'gcc-go$_target:go\"')",
  "(4297, Token.Text.NewLine, '\\n')",
  "(4298, Token.Text.Whitespace, '\\t')",
  "(4299, Token.Text, '_languages=\"$_languages,go\"')",
  "(4326, Token.Text.NewLine, '\\n')",
  "(4327, Token.Text, 'fi')",
  "(4329, Token.Text.NewLine, '\\n')",
  "(4330, Token.Text, 'if')",
  "(4332, Token.Text.Whitespace, ' ')",
  "(4333, Token.Text, '$LANG_FORTRAN;')",
  "(4347, Token.Text.Whitespace, ' ')",
  "(4348, Token.Text, 'then')",
  "(4352, Token.Text.NewLine, '\\n')",
  "(4353, Token.Text.Whitespace, '\\t')",
  "(4354, Token.Text, 'subpackages=\"$subpackages')",
  "(4379, Token.Text.Whitespace, ' ')",
  "(4380, Token.Text, 'libgfortran::$CTARGET_ARCH')",
  "(4406, Token.Text.Whitespace, ' ')",
  "(4407, Token.Text, 'gfortran$_target:gfortran\"')",
  "(4433, Token.Text.NewLine, '\\n')",
  "(4434, Token.Text.Whitespace, '\\t')",
  "(4435, Token.Text, '_languages=\"$_languages,fortran\"')",
  "(4467, Token.Text.NewLine, '\\n')",
  "(4468, Token.Text, 'fi')",
  "(4470, Token.Text.NewLine, '\\n')",
  "(4471, Token.Text, 'if')",
  "(4473, Token.Text.Whitespace, ' ')",
  "(4474, Token.Text, '$LANG_ADA;')",
  "(4484, Token.Text.Whitespace, ' ')",
  "(4485, Token.Text, 'then')",
  "(4489, Token.Text.NewLine, '\\n')",
  "(4490, Token.Text.Whitespace, '\\t')",
  "(4491, Token.Text, 'subpackages=\"$subpackages')",
  "(4516, Token.Text.Whitespace, ' ')",
  "(4517, Token.Text, 'libgnat-static:libgnatstatic:$CTARGET_ARCH')",
  "(4559, Token.Text.Whitespace, ' ')",
  "(4560, Token.Text, 'libgnat::$CTARGET_ARCH')",
  "(4582, Token.Text.Whitespace, ' ')",
  "(4583, Token.Text, 'gcc-gnat$_target:gnat\"')",
  "(4605, Token.Text.NewLine, '\\n')",
  "(4606, Token.Text.Whitespace, '\\t')",
  "(4607, Token.Text, '_languages=\"$_languages,ada\"')",
  "(4635, Token.Text.NewLine, '\\n')",
  "(4636, Token.Text.Whitespace, '\\t')",
  "(4637, Token.Text, '[')",
  "(4638, Token.Text.Whitespace, ' ')",
  "(4639, Token.Literal.String.Double, '\"$CBUILD\"')",
  "(4648, Token.Text.Whitespace, ' ')",
  "(4649, Token.Text, '=')",
  "(4650, Token.Text.Whitespace, ' ')",
  "(4651, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(4661, Token.Text.Whitespace, ' ')",
  "(4662, Token.Text, ']')",
  "(4663, Token.Text.Whitespace, ' ')",
  "(4664, Token.Text, '&&')",
  "(4666, Token.Text.Whitespace, ' ')",
  "(4667, Token.Text, 'makedepends_build=\"$makedepends_build')",
  "(4704, Token.Text.Whitespace, ' ')",
  "(4705, Token.Text, 'gcc-gnat-bootstrap\"')",
  "(4724, Token.Text.NewLine, '\\n')",
  "(4725, Token.Text.Whitespace, '\\t')",
  "(4726, Token.Text, '[')",
  "(4727, Token.Text.Whitespace, ' ')",
  "(4728, Token.Literal.String.Double, '\"$CBUILD\"')",
  "(4737, Token.Text.Whitespace, ' ')",
  "(4738, Token.Text, '!=')",
  "(4740, Token.Text.Whitespace, ' ')",
  "(4741, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(4751, Token.Text.Whitespace, ' ')",
  "(4752, Token.Text, ']')",
  "(4753, Token.Text.Whitespace, ' ')",
  "(4754, Token.Text, '&&')",
  "(4756, Token.Text.Whitespace, ' ')",
  "(4757, Token.Text, 'makedepends_build=\"$makedepends_build')",
  "(4794, Token.Text.Whitespace, ' ')",
  "(4795, Token.Text, 'gcc-gnat')",
  "(4803, Token.Text.Whitespace, ' ')",
  "(4804, Token.Text, 'gcc-gnat$_cross\"')",
  "(4820, Token.Text.NewLine, '\\n')",
  "(4821, Token.Text, 'fi')",
  "(4823, Token.Text.NewLine, '\\n')",
  "(4824, Token.Name.Variable, 'makedepends')",
  "(4835, Token.Operator.Equal, '=')",
  "(4836, Token.Literal.String.Double, '\"$makedepends_build $makedepends_host\"')",
  "(4874, Token.Text.NewLine, '\\n\\n')",
  "(4876, Token.Comment.Single, '# when using upstream releases, use this URI template')",
  "(4929, Token.Text.NewLine, '\\n')",
  "(4930, Token.Comment.Single, '# https://gcc.gnu.org/pub/gcc/releases/gcc-${_pkgbase:-$pkgver}/gcc-${_pkgbase:-$pkgver}.tar.xz')",
  "(5025, Token.Text.NewLine, '\\n')",
  "(5026, Token.Comment.Single, '#')",
  "(5027, Token.Text.NewLine, '\\n')",
  "(5028, Token.Comment.Single, '# right now, we are using a git snapshot.')",
  "(5069, Token.Text.NewLine, '\\n')",
  "(5070, Token.Comment.Single, '#')",
  "(5071, Token.Text.NewLine, '\\n')",
  "(5072, Token.Comment.Single, '# PLEASE submit all patches to gcc to https://gitlab.alpinelinux.org/kaniini/alpine-gcc-patches,')",
  "(5168, Token.Text.NewLine, '\\n')",
  "(5169, Token.Comment.Single, '# so that they can be properly tracked and easily rebased if needed.')",
  "(5237, Token.Text.NewLine, '\\n')",
  "(5238, Token.Name.Variable, 'source')",
  "(5244, Token.Operator.Equal, '=')",
  "(5245, Token.Literal.String.Double, '\"https://dev.alpinelinux.org/~nenolod/gcc-${pkgver}.tar.xz\\n\\t0001-posix_memalign.patch\\n\\t0002-gcc-poison-system-directories.patch\\n\\t0003-Turn-on-Wl-z-relro-z-now-by-default.patch\\n\\t0004-Turn-on-D_FORTIFY_SOURCE-2-by-default-for-C-C-ObjC-O.patch\\n\\t0005-On-linux-targets-pass-as-needed-by-default-to-the-li.patch\\n\\t0006-Enable-Wformat-and-Wformat-security-by-default.patch\\n\\t0007-Enable-Wtrampolines-by-default.patch\\n\\t0008-Disable-ssp-on-nostdlib-nodefaultlibs-and-ffreestand.patch\\n\\t0009-Ensure-that-msgfmt-doesn-t-encounter-problems-during.patch\\n\\t0010-Don-t-declare-asprintf-if-defined-as-a-macro.patch\\n\\t0011-libiberty-copy-PIC-objects-during-build-process.patch\\n\\t0012-libitm-disable-FORTIFY.patch\\n\\t0013-libgcc_s.patch\\n\\t0014-nopie.patch\\n\\t0015-libffi-use-__linux__-instead-of-__gnu_linux__-for-mu.patch\\n\\t0016-dlang-update-zlib-binding.patch\\n\\t0017-dlang-fix-fcntl-on-mips-add-libucontext-dep.patch\\n\\t0018-ada-fix-shared-linking.patch\\n\\t0019-build-fix-CXXFLAGS_FOR_BUILD-passing.patch\\n\\t0020-add-fortify-headers-paths.patch\\n\\t0021-Alpine-musl-package-provides-libssp_nonshared.a.-We-.patch\\n\\t0022-DP-Use-push-state-pop-state-for-gold-as-well-when-li.patch\\n\\t0023-Pure-64-bit-MIPS.patch\\n\\t0024-use-pure-64-bit-configuration-where-appropriate.patch\\n\\t0025-always-build-libgcc_eh.a.patch\\n\\t0026-ada-libgnarl-compatibility-for-musl.patch\\n\\t0027-ada-musl-support-fixes.patch\\n\\t0028-gcc-go-Use-_off_t-type-instead-of-_loff_t.patch\\n\\t0029-gcc-go-Don-t-include-sys-user.h.patch\\n\\t0030-gcc-go-Fix-ucontext_t-on-PPC64.patch\\n\\t0031-gcc-go-Fix-handling-of-signal-34-on-musl.patch\\n\\t0032-gcc-go-Use-int64-type-as-offset-argument-for-mmap.patch\\n\\t0033-gcc-go-Fix-st_-a-m-c-tim-fields-in-generated-sysinfo.patch\\n\\t0034-gcc-go-signal-34-is-special-on-musl-libc.patch\\n\\t0035-gcc-go-Prefer-_off_t-over-_off64_t.patch\\n\\t0036-gcc-go-undef-SETCONTEXT_CLOBBERS_TLS-in-proc.c.patch\\n\\t0037-gcc-go-link-to-libucontext.patch\\n\\t0038-gcc-go-Disable-printing-of-unaccessible-ppc64-struct.patch\\n\\t0039-CRuntime_Musl-Support-v1.2.0-for-32-bits.patch\\n\\t0040-configure-Add-enable-autolink-libatomic-use-in-LINK_.patch\\n\\t0041-Use-generic-errstr.go-implementation-on-musl.patch\\n\\t\"')",
  "(7355, Token.Text.NewLine, '\\n\\n')",
  "(7357, Token.Comment.Single, '# we build out-of-tree')",
  "(7379, Token.Text.NewLine, '\\n')",
  "(7380, Token.Name.Variable, '_gccdir')",
  "(7387, Token.Operator.Equal, '=')",
  "(7388, Token.Literal.String.Double, '\"$srcdir\"')",
  "(7397, Token.Text, '/gcc-$pkgver')",
  "(7409, Token.Text.NewLine, '\\n')",
  "(7410, Token.Name.Variable, '_gcclibdir')",
  "(7420, Token.Operator.Equal, '=')",
  "(7421, Token.Literal.String.Double, '\"/usr/lib/gcc/$CTARGET/${_pkgbase:-$pkgver}\"')",
  "(7465, Token.Text.NewLine, '\\n')",
  "(7466, Token.Name.Variable, '_gcclibexec')",
  "(7477, Token.Operator.Equal, '=')",
  "(7478, Token.Literal.String.Double, '\"/usr/libexec/gcc/$CTARGET/${_pkgbase:-$pkgver}\"')",
  "(7526, Token.Text.NewLine, '\\n\\n')",
  "(7528, Token.Text, 'prepare()')",
  "(7537, Token.Text.Whitespace, ' ')",
  "(7538, Token.Text, '{')",
  "(7539, Token.Text.NewLine, '\\n')",
  "(7540, Token.Text.Whitespace, '\\t')",
  "(7541, Token.Text, 'cd')",
  "(7543, Token.Text.Whitespace, ' ')",
  "(7544, Token.Literal.String.Double, '\"$_gccdir\"')",
  "(7554, Token.Text.NewLine, '\\n\\n')",
  "(7556, Token.Text.Whitespace, '\\t')",
  "(7557, Token.Text, '_err=')",
  "(7562, Token.Text.NewLine, '\\n')",
  "(7563, Token.Text.Whitespace, '\\t')",
  "(7564, Token.Text, 'for')",
  "(7567, Token.Text.Whitespace, ' ')",
  "(7568, Token.Text, 'i')",
  "(7569, Token.Text.Whitespace, ' ')",
  "(7570, Token.Text, 'in')",
  "(7572, Token.Text.Whitespace, ' ')",
  "(7573, Token.Text, '$source;')",
  "(7581, Token.Text.Whitespace, ' ')",
  "(7582, Token.Text, 'do')",
  "(7584, Token.Text.NewLine, '\\n')",
  "(7585, Token.Text.Whitespace, '\\t\\t')",
  "(7587, Token.Text, 'case')",
  "(7591, Token.Text.Whitespace, ' ')",
  "(7592, Token.Literal.String.Double, '\"$i\"')",
  "(7596, Token.Text.Whitespace, ' ')",
  "(7597, Token.Text, 'in')",
  "(7599, Token.Text.NewLine, '\\n')",
  "(7600, Token.Text.Whitespace, '\\t\\t')",
  "(7602, Token.Text, '*.patch)')",
  "(7610, Token.Text.NewLine, '\\n')",
  "(7611, Token.Text.Whitespace, '\\t\\t\\t')",
  "(7614, Token.Text, 'msg')",
  "(7617, Token.Text.Whitespace, ' ')",
  "(7618, Token.Literal.String.Double, '\"Applying $i\"')",
  "(7631, Token.Text.NewLine, '\\n')",
  "(7632, Token.Text.Whitespace, '\\t\\t\\t')",
  "(7635, Token.Text, 'patch')",
  "(7640, Token.Text.Whitespace, ' ')",
  "(7641, Token.Text, '-p1')",
  "(7644, Token.Text.Whitespace, ' ')",
  "(7645, Token.Text, '-i')",
  "(7647, Token.Text.Whitespace, ' ')",
  "(7648, Token.Literal.String.Double, '\"$srcdir\"')",
  "(7657, Token.Text, '/$i')",
  "(7660, Token.Text.Whitespace, ' ')",
  "(7661, Token.Text, '||')",
  "(7663, Token.Text.Whitespace, ' ')",
  "(7664, Token.Text, '_err=\"$_err')",
  "(7675, Token.Text.Whitespace, ' ')",
  "(7676, Token.Text, '$i\"')",
  "(7679, Token.Text.NewLine, '\\n')",
  "(7680, Token.Text.Whitespace, '\\t\\t\\t')",
  "(7683, Token.Text, ';;')",
  "(7685, Token.Text.NewLine, '\\n')",
  "(7686, Token.Text.Whitespace, '\\t\\t')",
  "(7688, Token.Text, 'esac')",
  "(7692, Token.Text.NewLine, '\\n')",
  "(7693, Token.Text.Whitespace, '\\t')",
  "(7694, Token.Text, 'done')",
  "(7698, Token.Text.NewLine, '\\n\\n')",
  "(7700, Token.Text.Whitespace, '\\t')",
  "(7701, Token.Text, 'if')",
  "(7703, Token.Text.Whitespace, ' ')",
  "(7704, Token.Text, '[')",
  "(7705, Token.Text.Whitespace, ' ')",
  "(7706, Token.Text, '-n')",
  "(7708, Token.Text.Whitespace, ' ')",
  "(7709, Token.Literal.String.Double, '\"$_err\"')",
  "(7716, Token.Text.Whitespace, ' ')",
  "(7717, Token.Text, '];')",
  "(7719, Token.Text.Whitespace, ' ')",
  "(7720, Token.Text, 'then')",
  "(7724, Token.Text.NewLine, '\\n')",
  "(7725, Token.Text.Whitespace, '\\t\\t')",
  "(7727, Token.Text, 'error')",
  "(7732, Token.Text.Whitespace, ' ')",
  "(7733, Token.Literal.String.Double, '\"The following patches failed:\"')",
  "(7764, Token.Text.NewLine, '\\n')",
  "(7765, Token.Text.Whitespace, '\\t\\t')",
  "(7767, Token.Text, 'for')",
  "(7770, Token.Text.Whitespace, ' ')",
  "(7771, Token.Text, 'i')",
  "(7772, Token.Text.Whitespace, ' ')",
  "(7773, Token.Text, 'in')",
  "(7775, Token.Text.Whitespace, ' ')",
  "(7776, Token.Text, '$_err;')",
  "(7782, Token.Text.Whitespace, ' ')",
  "(7783, Token.Text, 'do')",
  "(7785, Token.Text.NewLine, '\\n')",
  "(7786, Token.Text.Whitespace, '\\t\\t\\t')",
  "(7789, Token.Text, 'echo')",
  "(7793, Token.Text.Whitespace, ' ')",
  "(7794, Token.Literal.String.Double, '\"  $i\"')",
  "(7800, Token.Text.NewLine, '\\n')",
  "(7801, Token.Text.Whitespace, '\\t\\t')",
  "(7803, Token.Text, 'done')",
  "(7807, Token.Text.NewLine, '\\n')",
  "(7808, Token.Text.Whitespace, '\\t\\t')",
  "(7810, Token.Text, 'return')",
  "(7816, Token.Text.Whitespace, ' ')",
  "(7817, Token.Text, '1')",
  "(7818, Token.Text.NewLine, '\\n')",
  "(7819, Token.Text.Whitespace, '\\t')",
  "(7820, Token.Text, 'fi')",
  "(7822, Token.Text.NewLine, '\\n\\n')",
  "(7824, Token.Text.Whitespace, '\\t')",
  "(7825, Token.Text, 'echo')",
  "(7829, Token.Text.Whitespace, ' ')",
  "(7830, Token.Text, '${_pkgbase:-$pkgver}')",
  "(7850, Token.Text.Whitespace, ' ')",
  "(7851, Token.Text, '>')",
  "(7852, Token.Text.Whitespace, ' ')",
  "(7853, Token.Text, 'gcc/BASE-VER')",
  "(7865, Token.Text.NewLine, '\\n')",
  "(7866, Token.Text, '}')",
  "(7867, Token.Text.NewLine, '\\n\\n')",
  "(7869, Token.Text, 'build()')",
  "(7876, Token.Text.Whitespace, ' ')",
  "(7877, Token.Text, '{')",
  "(7878, Token.Text.NewLine, '\\n')",
  "(7879, Token.Text.Whitespace, '\\t')",
  "(7880, Token.Text, 'local')",
  "(7885, Token.Text.Whitespace, ' ')",
  "(7886, Token.Text, '_arch_configure=')",
  "(7902, Token.Text.NewLine, '\\n')",
  "(7903, Token.Text.Whitespace, '\\t')",
  "(7904, Token.Text, 'local')",
  "(7909, Token.Text.Whitespace, ' ')",
  "(7910, Token.Text, '_libc_configure=')",
  "(7926, Token.Text.NewLine, '\\n')",
  "(7927, Token.Text.Whitespace, '\\t')",
  "(7928, Token.Text, 'local')",
  "(7933, Token.Text.Whitespace, ' ')",
  "(7934, Token.Text, '_cross_configure=')",
  "(7951, Token.Text.NewLine, '\\n')",
  "(7952, Token.Text.Whitespace, '\\t')",
  "(7953, Token.Text, 'local')",
  "(7958, Token.Text.Whitespace, ' ')",
  "(7959, Token.Text, '_bootstrap_configure=')",
  "(7980, Token.Text.NewLine, '\\n')",
  "(7981, Token.Text.Whitespace, '\\t')",
  "(7982, Token.Text, 'local')",
  "(7987, Token.Text.Whitespace, ' ')",
  "(7988, Token.Text, '_symvers=')",
  "(7997, Token.Text.NewLine, '\\n\\n')",
  "(7999, Token.Text.Whitespace, '\\t')",
  "(8000, Token.Text, 'cd')",
  "(8002, Token.Text.Whitespace, ' ')",
  "(8003, Token.Literal.String.Double, '\"$_gccdir\"')",
  "(8013, Token.Text.NewLine, '\\n\\n')",
  "(8015, Token.Text.Whitespace, '\\t')",
  "(8016, Token.Text, 'case')",
  "(8020, Token.Text.Whitespace, ' ')",
  "(8021, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(8031, Token.Text.Whitespace, ' ')",
  "(8032, Token.Text, 'in')",
  "(8034, Token.Text.NewLine, '\\n')",
  "(8035, Token.Text.Whitespace, '\\t')",
  "(8036, Token.Text, 'aarch64-*-*-*)')",
  "(8050, Token.Text.Whitespace, '\\t\\t')",
  "(8052, Token.Text, '_arch_configure=\"--with-arch=armv8-a')",
  "(8088, Token.Text.Whitespace, ' ')",
  "(8089, Token.Text, '--with-abi=lp64\";;')",
  "(8107, Token.Text.NewLine, '\\n')",
  "(8108, Token.Text.Whitespace, '\\t')",
  "(8109, Token.Text, 'armv5-*-*-*eabi)')",
  "(8125, Token.Text.Whitespace, '\\t')",
  "(8126, Token.Text, '_arch_configure=\"--with-arch=armv5te')",
  "(8162, Token.Text.Whitespace, ' ')",
  "(8163, Token.Text, '--with-tune=arm926ej-s')",
  "(8185, Token.Text.Whitespace, ' ')",
  "(8186, Token.Text, '--with-float=soft')",
  "(8203, Token.Text.Whitespace, ' ')",
  "(8204, Token.Text, '--with-abi=aapcs-linux\";;')",
  "(8229, Token.Text.NewLine, '\\n')",
  "(8230, Token.Text.Whitespace, '\\t')",
  "(8231, Token.Text, 'armv6-*-*-*eabihf)')",
  "(8249, Token.Text.Whitespace, '\\t')",
  "(8250, Token.Text, '_arch_configure=\"--with-arch=armv6zk')",
  "(8286, Token.Text.Whitespace, ' ')",
  "(8287, Token.Text, '--with-tune=arm1176jzf-s')",
  "(8311, Token.Text.Whitespace, ' ')",
  "(8312, Token.Text, '--with-fpu=vfp')",
  "(8326, Token.Text.Whitespace, ' ')",
  "(8327, Token.Text, '--with-float=hard')",
  "(8344, Token.Text.Whitespace, ' ')",
  "(8345, Token.Text, '--with-abi=aapcs-linux\";;')",
  "(8370, Token.Text.NewLine, '\\n')",
  "(8371, Token.Text.Whitespace, '\\t')",
  "(8372, Token.Text, 'armv7-*-*-*eabihf)')",
  "(8390, Token.Text.Whitespace, '\\t')",
  "(8391, Token.Text, '_arch_configure=\"--with-arch=armv7-a')",
  "(8427, Token.Text.Whitespace, ' ')",
  "(8428, Token.Text, '--with-tune=generic-armv7-a')",
  "(8455, Token.Text.Whitespace, ' ')",
  "(8456, Token.Text, '--with-fpu=vfpv3-d16')",
  "(8476, Token.Text.Whitespace, ' ')",
  "(8477, Token.Text, '--with-float=hard')",
  "(8494, Token.Text.Whitespace, ' ')",
  "(8495, Token.Text, '--with-abi=aapcs-linux')",
  "(8517, Token.Text.Whitespace, ' ')",
  "(8518, Token.Text, '--with-mode=thumb\";;')",
  "(8538, Token.Text.NewLine, '\\n')",
  "(8539, Token.Text.Whitespace, '\\t')",
  "(8540, Token.Text, 'mips-*-*-*)')",
  "(8551, Token.Text.Whitespace, '\\t\\t')",
  "(8553, Token.Text, '_arch_configure=\"--with-arch=mips32')",
  "(8588, Token.Text.Whitespace, ' ')",
  "(8589, Token.Text, '--with-mips-plt')",
  "(8604, Token.Text.Whitespace, ' ')",
  "(8605, Token.Text, '--with-float=soft')",
  "(8622, Token.Text.Whitespace, ' ')",
  "(8623, Token.Text, '--with-abi=32\";;')",
  "(8639, Token.Text.NewLine, '\\n')",
  "(8640, Token.Text.Whitespace, '\\t')",
  "(8641, Token.Text, 'mips64-*-*-*)')",
  "(8654, Token.Text.Whitespace, '\\t\\t')",
  "(8656, Token.Text, '_arch_configure=\"--with-arch=mips3')",
  "(8690, Token.Text.Whitespace, ' ')",
  "(8691, Token.Text, '--with-tune=mips64')",
  "(8709, Token.Text.Whitespace, ' ')",
  "(8710, Token.Text, '--with-mips-plt')",
  "(8725, Token.Text.Whitespace, ' ')",
  "(8726, Token.Text, '--with-float=soft')",
  "(8743, Token.Text.Whitespace, ' ')",
  "(8744, Token.Text, '--with-abi=64\";;')",
  "(8760, Token.Text.NewLine, '\\n')",
  "(8761, Token.Text.Whitespace, '\\t')",
  "(8762, Token.Text, 'mips64el-*-*-*)')",
  "(8777, Token.Text.Whitespace, '\\t\\t')",
  "(8779, Token.Text, '_arch_configure=\"--with-arch=mips3')",
  "(8813, Token.Text.Whitespace, ' ')",
  "(8814, Token.Text, '--with-tune=mips64')",
  "(8832, Token.Text.Whitespace, ' ')",
  "(8833, Token.Text, '--with-mips-plt')",
  "(8848, Token.Text.Whitespace, ' ')",
  "(8849, Token.Text, '--with-float=soft')",
  "(8866, Token.Text.Whitespace, ' ')",
  "(8867, Token.Text, '--with-abi=64\";;')",
  "(8883, Token.Text.NewLine, '\\n')",
  "(8884, Token.Text.Whitespace, '\\t')",
  "(8885, Token.Text, 'mipsel-*-*-*)')",
  "(8898, Token.Text.Whitespace, '\\t\\t')",
  "(8900, Token.Text, '_arch_configure=\"--with-arch=mips32')",
  "(8935, Token.Text.Whitespace, ' ')",
  "(8936, Token.Text, '--with-mips-plt')",
  "(8951, Token.Text.Whitespace, ' ')",
  "(8952, Token.Text, '--with-float=soft')",
  "(8969, Token.Text.Whitespace, ' ')",
  "(8970, Token.Text, '--with-abi=32\";;')",
  "(8986, Token.Text.NewLine, '\\n')",
  "(8987, Token.Text.Whitespace, '\\t')",
  "(8988, Token.Text, 'powerpc-*-*-*)')",
  "(9002, Token.Text.Whitespace, '\\t\\t')",
  "(9004, Token.Text, '_arch_configure=\"--enable-secureplt')",
  "(9039, Token.Text.Whitespace, ' ')",
  "(9040, Token.Text, '--enable-decimal-float=no\";;')",
  "(9068, Token.Text.NewLine, '\\n')",
  "(9069, Token.Text.Whitespace, '\\t')",
  "(9070, Token.Text, 'powerpc64*-*-*-*)')",
  "(9087, Token.Text.Whitespace, '\\t')",
  "(9088, Token.Text, '_arch_configure=\"--with-abi=elfv2')",
  "(9121, Token.Text.Whitespace, ' ')",
  "(9122, Token.Text, '--enable-secureplt')",
  "(9140, Token.Text.Whitespace, ' ')",
  "(9141, Token.Text, '--enable-decimal-float=no')",
  "(9166, Token.Text.Whitespace, ' ')",
  "(9167, Token.Text, '--enable-targets=powerpcle-linux\";;')",
  "(9202, Token.Text.NewLine, '\\n')",
  "(9203, Token.Text.Whitespace, '\\t')",
  "(9204, Token.Text, 'i486-*-*-*)')",
  "(9215, Token.Text.Whitespace, '\\t\\t')",
  "(9217, Token.Text, '_arch_configure=\"--with-arch=i486')",
  "(9250, Token.Text.Whitespace, ' ')",
  "(9251, Token.Text, '--with-tune=generic')",
  "(9270, Token.Text.Whitespace, ' ')",
  "(9271, Token.Text, '--enable-cld\";;')",
  "(9286, Token.Text.NewLine, '\\n')",
  "(9287, Token.Text.Whitespace, '\\t')",
  "(9288, Token.Text, 'i586-*-*-*)')",
  "(9299, Token.Text.Whitespace, '\\t\\t')",
  "(9301, Token.Text, '_arch_configure=\"--with-arch=i586')",
  "(9334, Token.Text.Whitespace, ' ')",
  "(9335, Token.Text, '--with-tune=generic')",
  "(9354, Token.Text.Whitespace, ' ')",
  "(9355, Token.Text, '--enable-cld\";;')",
  "(9370, Token.Text.NewLine, '\\n')",
  "(9371, Token.Text.Whitespace, '\\t')",
  "(9372, Token.Text, 's390x-*-*-*)')",
  "(9384, Token.Text.Whitespace, '\\t\\t')",
  "(9386, Token.Text, '_arch_configure=\"--with-arch=z196')",
  "(9419, Token.Text.Whitespace, ' ')",
  "(9420, Token.Text, '--with-tune=zEC12')",
  "(9437, Token.Text.Whitespace, ' ')",
  "(9438, Token.Text, '--with-zarch')",
  "(9450, Token.Text.Whitespace, ' ')",
  "(9451, Token.Text, '--with-long-double-128')",
  "(9473, Token.Text.Whitespace, ' ')",
  "(9474, Token.Text, '--enable-decimal-float\";;')",
  "(9499, Token.Text.NewLine, '\\n')",
  "(9500, Token.Text.Whitespace, '\\t')",
  "(9501, Token.Text, 'riscv64-*-*-*)')",
  "(9515, Token.Text.Whitespace, '\\t\\t')",
  "(9517, Token.Text, '_arch_configure=\"--with-arch=rv64gc')",
  "(9552, Token.Text.Whitespace, ' ')",
  "(9553, Token.Text, '--with-abi=lp64d')",
  "(9569, Token.Text.Whitespace, ' ')",
  "(9570, Token.Text, '--enable-autolink-libatomic\";;')",
  "(9600, Token.Text.NewLine, '\\n')",
  "(9601, Token.Text.Whitespace, '\\t')",
  "(9602, Token.Text, 'esac')",
  "(9606, Token.Text.NewLine, '\\n\\n')",
  "(9608, Token.Text.Whitespace, '\\t')",
  "(9609, Token.Text, 'case')",
  "(9613, Token.Text.Whitespace, ' ')",
  "(9614, Token.Literal.String.Double, '\"$CTARGET_ARCH\"')",
  "(9629, Token.Text.Whitespace, ' ')",
  "(9630, Token.Text, 'in')",
  "(9632, Token.Text.NewLine, '\\n')",
  "(9633, Token.Text.Whitespace, '\\t')",
  "(9634, Token.Text, 'mips*)')",
  "(9640, Token.Text.Whitespace, '\\t')",
  "(9641, Token.Text, '_hash_style_configure=\"--with-linker-hash-style=sysv\"')",
  "(9694, Token.Text.Whitespace, ' ')",
  "(9695, Token.Text, ';;')",
  "(9697, Token.Text.NewLine, '\\n')",
  "(9698, Token.Text.Whitespace, '\\t')",
  "(9699, Token.Text, '*)')",
  "(9701, Token.Text.Whitespace, '\\t')",
  "(9702, Token.Text, '_hash_style_configure=\"--with-linker-hash-style=gnu\"')",
  "(9754, Token.Text.Whitespace, ' ')",
  "(9755, Token.Text, ';;')",
  "(9757, Token.Text.NewLine, '\\n')",
  "(9758, Token.Text.Whitespace, '\\t')",
  "(9759, Token.Text, 'esac')",
  "(9763, Token.Text.NewLine, '\\n\\n')",
  "(9765, Token.Text.Whitespace, '\\t')",
  "(9766, Token.Text, 'case')",
  "(9770, Token.Text.Whitespace, ' ')",
  "(9771, Token.Literal.String.Double, '\"$CTARGET_LIBC\"')",
  "(9786, Token.Text.Whitespace, ' ')",
  "(9787, Token.Text, 'in')",
  "(9789, Token.Text.NewLine, '\\n')",
  "(9790, Token.Text.Whitespace, '\\t')",
  "(9791, Token.Text, 'musl)')",
  "(9796, Token.Text.NewLine, '\\n')",
  "(9797, Token.Text.Whitespace, '\\t\\t')",
  "(9799, Token.Comment.Single, '# musl does not support mudflap, or libsanitizer')",
  "(9847, Token.Text.NewLine, '\\n')",
  "(9848, Token.Text.Whitespace, '\\t\\t')",
  "(9850, Token.Comment.Single, '# libmpx uses secure_getenv and struct _libc_fpstate not present in musl')",
  "(9922, Token.Text.NewLine, '\\n')",
  "(9923, Token.Text.Whitespace, '\\t\\t')",
  "(9925, Token.Comment.Single, \"# alpine musl provides libssp_nonshared.a, so we don't need libssp either\")",
  "(9998, Token.Text.NewLine, '\\n')",
  "(9999, Token.Text.Whitespace, '\\t\\t')",
  "(10001, Token.Text, '_libc_configure=\"--disable-libssp')",
  "(10034, Token.Text.Whitespace, ' ')",
  "(10035, Token.Text, '--disable-libmpx')",
  "(10051, Token.Text.Whitespace, ' ')",
  "(10052, Token.Text, '--disable-libmudflap')",
  "(10072, Token.Text.Whitespace, ' ')",
  "(10073, Token.Text, '--disable-libsanitizer\"')",
  "(10096, Token.Text.NewLine, '\\n')",
  "(10097, Token.Text.Whitespace, '\\t\\t')",
  "(10099, Token.Text, '_symvers=\"--disable-symvers\"')",
  "(10127, Token.Text.NewLine, '\\n')",
  "(10128, Token.Text.Whitespace, '\\t\\t')",
  "(10130, Token.Text, 'export')",
  "(10136, Token.Text.Whitespace, ' ')",
  "(10137, Token.Text, 'libat_cv_have_ifunc=no')",
  "(10159, Token.Text.NewLine, '\\n')",
  "(10160, Token.Text.Whitespace, '\\t\\t')",
  "(10162, Token.Text, ';;')",
  "(10164, Token.Text.NewLine, '\\n')",
  "(10165, Token.Text.Whitespace, '\\t')",
  "(10166, Token.Text, 'esac')",
  "(10170, Token.Text.NewLine, '\\n\\n')",
  "(10172, Token.Text.Whitespace, '\\t')",
  "(10173, Token.Text, '[')",
  "(10174, Token.Text.Whitespace, ' ')",
  "(10175, Token.Literal.String.Double, '\"$CBUILD\"')",
  "(10184, Token.Text.Whitespace, ' ')",
  "(10185, Token.Text, '!=')",
  "(10187, Token.Text.Whitespace, ' ')",
  "(10188, Token.Literal.String.Double, '\"$CHOST\"')",
  "(10196, Token.Text.Whitespace, '   ')",
  "(10199, Token.Text, ']')",
  "(10200, Token.Text.Whitespace, ' ')",
  "(10201, Token.Text, '&&')",
  "(10203, Token.Text.Whitespace, ' ')",
  "(10204, Token.Text, '_cross_configure=\"--disable-bootstrap\"')",
  "(10242, Token.Text.NewLine, '\\n')",
  "(10243, Token.Text.Whitespace, '\\t')",
  "(10244, Token.Text, '[')",
  "(10245, Token.Text.Whitespace, ' ')",
  "(10246, Token.Literal.String.Double, '\"$CHOST\"')",
  "(10254, Token.Text.Whitespace, '  ')",
  "(10256, Token.Text, '!=')",
  "(10258, Token.Text.Whitespace, ' ')",
  "(10259, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(10269, Token.Text.Whitespace, ' ')",
  "(10270, Token.Text, ']')",
  "(10271, Token.Text.Whitespace, ' ')",
  "(10272, Token.Text, '&&')",
  "(10274, Token.Text.Whitespace, ' ')",
  "(10275, Token.Text, '_cross_configure=\"--disable-bootstrap')",
  "(10312, Token.Text.Whitespace, ' ')",
  "(10313, Token.Text, '--with-sysroot=$CBUILDROOT\"')",
  "(10340, Token.Text.NewLine, '\\n\\n')",
  "(10342, Token.Text.Whitespace, '\\t')",
  "(10343, Token.Text, 'case')",
  "(10347, Token.Text.Whitespace, ' ')",
  "(10348, Token.Literal.String.Double, '\"$BOOTSTRAP\"')",
  "(10360, Token.Text.Whitespace, ' ')",
  "(10361, Token.Text, 'in')",
  "(10363, Token.Text.NewLine, '\\n')",
  "(10364, Token.Text.Whitespace, '\\t')",
  "(10365, Token.Text, 'nolibc)')",
  "(10372, Token.Text.Whitespace, '\\t')",
  "(10373, Token.Text, '_bootstrap_configure=\"--with-newlib')",
  "(10408, Token.Text.Whitespace, ' ')",
  "(10409, Token.Text, '--disable-shared')",
  "(10425, Token.Text.Whitespace, ' ')",
  "(10426, Token.Text, '--enable-threads=no\"')",
  "(10446, Token.Text.Whitespace, ' ')",
  "(10447, Token.Text, ';;')",
  "(10449, Token.Text.NewLine, '\\n')",
  "(10450, Token.Text.Whitespace, '\\t')",
  "(10451, Token.Text, '*)')",
  "(10453, Token.Text.Whitespace, '\\t')",
  "(10454, Token.Text, '_bootstrap_configure=\"--enable-shared')",
  "(10491, Token.Text.Whitespace, ' ')",
  "(10492, Token.Text, '--enable-threads')",
  "(10508, Token.Text.Whitespace, ' ')",
  "(10509, Token.Text, '--enable-tls\"')",
  "(10522, Token.Text.Whitespace, ' ')",
  "(10523, Token.Text, ';;')",
  "(10525, Token.Text.NewLine, '\\n')",
  "(10526, Token.Text.Whitespace, '\\t')",
  "(10527, Token.Text, 'esac')",
  "(10531, Token.Text.NewLine, '\\n\\n')",
  "(10533, Token.Text.Whitespace, '\\t')",
  "(10534, Token.Text, '$_libgomp')",
  "(10543, Token.Text.Whitespace, '\\t')",
  "(10544, Token.Text, '||')",
  "(10546, Token.Text.Whitespace, ' ')",
  "(10547, Token.Text, '_bootstrap_configure=\"$_bootstrap_configure')",
  "(10590, Token.Text.Whitespace, ' ')",
  "(10591, Token.Text, '--disable-libgomp\"')",
  "(10609, Token.Text.NewLine, '\\n')",
  "(10610, Token.Text.Whitespace, '\\t')",
  "(10611, Token.Text, '$_libatomic')",
  "(10622, Token.Text.Whitespace, '\\t')",
  "(10623, Token.Text, '||')",
  "(10625, Token.Text.Whitespace, ' ')",
  "(10626, Token.Text, '_bootstrap_configure=\"$_bootstrap_configure')",
  "(10669, Token.Text.Whitespace, ' ')",
  "(10670, Token.Text, '--disable-libatomic\"')",
  "(10690, Token.Text.NewLine, '\\n')",
  "(10691, Token.Text.Whitespace, '\\t')",
  "(10692, Token.Text, '$_libitm')",
  "(10700, Token.Text.Whitespace, '\\t')",
  "(10701, Token.Text, '||')",
  "(10703, Token.Text.Whitespace, ' ')",
  "(10704, Token.Text, '_bootstrap_configure=\"$_bootstrap_configure')",
  "(10747, Token.Text.Whitespace, ' ')",
  "(10748, Token.Text, '--disable-libitm\"')",
  "(10765, Token.Text.NewLine, '\\n')",
  "(10766, Token.Text.Whitespace, '\\t')",
  "(10767, Token.Text, '$_libquadmath')",
  "(10780, Token.Text.Whitespace, '\\t')",
  "(10781, Token.Text, '||')",
  "(10783, Token.Text.Whitespace, ' ')",
  "(10784, Token.Text, '_arch_configure=\"$_arch_configure')",
  "(10817, Token.Text.Whitespace, ' ')",
  "(10818, Token.Text, '--disable-libquadmath\"')",
  "(10840, Token.Text.NewLine, '\\n\\n')",
  "(10842, Token.Text.Whitespace, '\\t')",
  "(10843, Token.Text, 'msg')",
  "(10846, Token.Text.Whitespace, ' ')",
  "(10847, Token.Literal.String.Double, '\"Building the following:\"')",
  "(10872, Token.Text.NewLine, '\\n')",
  "(10873, Token.Text.Whitespace, '\\t')",
  "(10874, Token.Text, 'echo')",
  "(10878, Token.Text.Whitespace, ' ')",
  "(10879, Token.Literal.String.Double, '\"\"')",
  "(10881, Token.Text.NewLine, '\\n')",
  "(10882, Token.Text.Whitespace, '\\t')",
  "(10883, Token.Text, 'echo')",
  "(10887, Token.Text.Whitespace, ' ')",
  "(10888, Token.Literal.String.Double, '\"  CBUILD=$CBUILD\"')",
  "(10906, Token.Text.NewLine, '\\n')",
  "(10907, Token.Text.Whitespace, '\\t')",
  "(10908, Token.Text, 'echo')",
  "(10912, Token.Text.Whitespace, ' ')",
  "(10913, Token.Literal.String.Double, '\"  CHOST=$CHOST\"')",
  "(10929, Token.Text.NewLine, '\\n')",
  "(10930, Token.Text.Whitespace, '\\t')",
  "(10931, Token.Text, 'echo')",
  "(10935, Token.Text.Whitespace, ' ')",
  "(10936, Token.Literal.String.Double, '\"  CTARGET=$CTARGET\"')",
  "(10956, Token.Text.NewLine, '\\n')",
  "(10957, Token.Text.Whitespace, '\\t')",
  "(10958, Token.Text, 'echo')",
  "(10962, Token.Text.Whitespace, ' ')",
  "(10963, Token.Literal.String.Double, '\"  CTARGET_ARCH=$CTARGET_ARCH\"')",
  "(10993, Token.Text.NewLine, '\\n')",
  "(10994, Token.Text.Whitespace, '\\t')",
  "(10995, Token.Text, 'echo')",
  "(10999, Token.Text.Whitespace, ' ')",
  "(11000, Token.Literal.String.Double, '\"  CTARGET_LIBC=$CTARGET_LIBC\"')",
  "(11030, Token.Text.NewLine, '\\n')",
  "(11031, Token.Text.Whitespace, '\\t')",
  "(11032, Token.Text, 'echo')",
  "(11036, Token.Text.Whitespace, ' ')",
  "(11037, Token.Literal.String.Double, '\"  languages=$_languages\"')",
  "(11062, Token.Text.NewLine, '\\n')",
  "(11063, Token.Text.Whitespace, '\\t')",
  "(11064, Token.Text, 'echo')",
  "(11068, Token.Text.Whitespace, ' ')",
  "(11069, Token.Literal.String.Double, '\"  arch_configure=$_arch_configure\"')",
  "(11104, Token.Text.NewLine, '\\n')",
  "(11105, Token.Text.Whitespace, '\\t')",
  "(11106, Token.Text, 'echo')",
  "(11110, Token.Text.Whitespace, ' ')",
  "(11111, Token.Literal.String.Double, '\"  libc_configure=$_libc_configure\"')",
  "(11146, Token.Text.NewLine, '\\n')",
  "(11147, Token.Text.Whitespace, '\\t')",
  "(11148, Token.Text, 'echo')",
  "(11152, Token.Text.Whitespace, ' ')",
  "(11153, Token.Literal.String.Double, '\"  cross_configure=$_cross_configure\"')",
  "(11190, Token.Text.NewLine, '\\n')",
  "(11191, Token.Text.Whitespace, '\\t')",
  "(11192, Token.Text, 'echo')",
  "(11196, Token.Text.Whitespace, ' ')",
  "(11197, Token.Literal.String.Double, '\"  bootstrap_configure=$_bootstrap_configure\"')",
  "(11242, Token.Text.NewLine, '\\n')",
  "(11243, Token.Text.Whitespace, '\\t')",
  "(11244, Token.Text, 'echo')",
  "(11248, Token.Text.Whitespace, ' ')",
  "(11249, Token.Literal.String.Double, '\"\\thash_style_configure=$_hash_style_configure\"')",
  "(11295, Token.Text.NewLine, '\\n')",
  "(11296, Token.Text.Whitespace, '\\t')",
  "(11297, Token.Text, 'echo')",
  "(11301, Token.Text.Whitespace, ' ')",
  "(11302, Token.Literal.String.Double, '\"\"')",
  "(11304, Token.Text.NewLine, '\\n\\n')",
  "(11306, Token.Text.Whitespace, '\\t')",
  "(11307, Token.Text, 'export')",
  "(11313, Token.Text.Whitespace, ' ')",
  "(11314, Token.Text, 'CFLAGS=\"$CFLAGS')",
  "(11329, Token.Text.Whitespace, ' ')",
  "(11330, Token.Text, '-O2\"')",
  "(11334, Token.Text.NewLine, '\\n\\n')",
  "(11336, Token.Text.Whitespace, '\\t')",
  "(11337, Token.Text, 'mkdir')",
  "(11342, Token.Text.Whitespace, ' ')",
  "(11343, Token.Text, '-p')",
  "(11345, Token.Text.Whitespace, ' ')",
  "(11346, Token.Literal.String.Double, '\"$_builddir\"')",
  "(11358, Token.Text.NewLine, '\\n')",
  "(11359, Token.Text.Whitespace, '\\t')",
  "(11360, Token.Text, 'cd')",
  "(11362, Token.Text.Whitespace, ' ')",
  "(11363, Token.Literal.String.Double, '\"$_builddir\"')",
  "(11375, Token.Text.NewLine, '\\n')",
  "(11376, Token.Text.Whitespace, '\\t')",
  "(11377, Token.Literal.String.Double, '\"$_gccdir\"')",
  "(11387, Token.Text, '/configure')",
  "(11397, Token.Text.Whitespace, ' ')",
  "(11398, Token.Text, '--prefix=/usr')",
  "(11411, Token.Text.Whitespace, ' ')",
  "(11412, Token.Text, '\\\\')",
  "(11413, Token.Text.NewLine, '\\n')",
  "(11414, Token.Text.Whitespace, '\\t\\t')",
  "(11416, Token.Text, '--mandir=/usr/share/man')",
  "(11439, Token.Text.Whitespace, ' ')",
  "(11440, Token.Text, '\\\\')",
  "(11441, Token.Text.NewLine, '\\n')",
  "(11442, Token.Text.Whitespace, '\\t\\t')",
  "(11444, Token.Text, '--infodir=/usr/share/info')",
  "(11469, Token.Text.Whitespace, ' ')",
  "(11470, Token.Text, '\\\\')",
  "(11471, Token.Text.NewLine, '\\n')",
  "(11472, Token.Text.Whitespace, '\\t\\t')",
  "(11474, Token.Text, '--build=${CBUILD}')",
  "(11491, Token.Text.Whitespace, ' ')",
  "(11492, Token.Text, '\\\\')",
  "(11493, Token.Text.NewLine, '\\n')",
  "(11494, Token.Text.Whitespace, '\\t\\t')",
  "(11496, Token.Text, '--host=${CHOST}')",
  "(11511, Token.Text.Whitespace, ' ')",
  "(11512, Token.Text, '\\\\')",
  "(11513, Token.Text.NewLine, '\\n')",
  "(11514, Token.Text.Whitespace, '\\t\\t')",
  "(11516, Token.Text, '--target=${CTARGET}')",
  "(11535, Token.Text.Whitespace, ' ')",
  "(11536, Token.Text, '\\\\')",
  "(11537, Token.Text.NewLine, '\\n')",
  "(11538, Token.Text.Whitespace, '\\t\\t')",
  "(11540, Token.Text, '--with-pkgversion=\"Alpine')",
  "(11565, Token.Text.Whitespace, ' ')",
  "(11566, Token.Text, '$pkgver\"')",
  "(11574, Token.Text.Whitespace, ' ')",
  "(11575, Token.Text, '\\\\')",
  "(11576, Token.Text.NewLine, '\\n')",
  "(11577, Token.Text.Whitespace, '\\t\\t')",
  "(11579, Token.Text, '--enable-checking=release')",
  "(11604, Token.Text.Whitespace, ' ')",
  "(11605, Token.Text, '\\\\')",
  "(11606, Token.Text.NewLine, '\\n')",
  "(11607, Token.Text.Whitespace, '\\t\\t')",
  "(11609, Token.Text, '--disable-fixed-point')",
  "(11630, Token.Text.Whitespace, ' ')",
  "(11631, Token.Text, '\\\\')",
  "(11632, Token.Text.NewLine, '\\n')",
  "(11633, Token.Text.Whitespace, '\\t\\t')",
  "(11635, Token.Text, '--disable-libstdcxx-pch')",
  "(11658, Token.Text.Whitespace, ' ')",
  "(11659, Token.Text, '\\\\')",
  "(11660, Token.Text.NewLine, '\\n')",
  "(11661, Token.Text.Whitespace, '\\t\\t')",
  "(11663, Token.Text, '--disable-multilib')",
  "(11681, Token.Text.Whitespace, ' ')",
  "(11682, Token.Text, '\\\\')",
  "(11683, Token.Text.NewLine, '\\n')",
  "(11684, Token.Text.Whitespace, '\\t\\t')",
  "(11686, Token.Text, '--disable-nls')",
  "(11699, Token.Text.Whitespace, ' ')",
  "(11700, Token.Text, '\\\\')",
  "(11701, Token.Text.NewLine, '\\n')",
  "(11702, Token.Text.Whitespace, '\\t\\t')",
  "(11704, Token.Text, '--disable-werror')",
  "(11720, Token.Text.Whitespace, ' ')",
  "(11721, Token.Text, '\\\\')",
  "(11722, Token.Text.NewLine, '\\n')",
  "(11723, Token.Text.Whitespace, '\\t\\t')",
  "(11725, Token.Text, '$_symvers')",
  "(11734, Token.Text.Whitespace, ' ')",
  "(11735, Token.Text, '\\\\')",
  "(11736, Token.Text.NewLine, '\\n')",
  "(11737, Token.Text.Whitespace, '\\t\\t')",
  "(11739, Token.Text, '--enable-__cxa_atexit')",
  "(11760, Token.Text.Whitespace, ' ')",
  "(11761, Token.Text, '\\\\')",
  "(11762, Token.Text.NewLine, '\\n')",
  "(11763, Token.Text.Whitespace, '\\t\\t')",
  "(11765, Token.Text, '--enable-default-pie')",
  "(11785, Token.Text.Whitespace, ' ')",
  "(11786, Token.Text, '\\\\')",
  "(11787, Token.Text.NewLine, '\\n')",
  "(11788, Token.Text.Whitespace, '\\t\\t')",
  "(11790, Token.Text, '--enable-default-ssp')",
  "(11810, Token.Text.Whitespace, ' ')",
  "(11811, Token.Text, '\\\\')",
  "(11812, Token.Text.NewLine, '\\n')",
  "(11813, Token.Text.Whitespace, '\\t\\t')",
  "(11815, Token.Text, '--enable-cloog-backend')",
  "(11837, Token.Text.Whitespace, ' ')",
  "(11838, Token.Text, '\\\\')",
  "(11839, Token.Text.NewLine, '\\n')",
  "(11840, Token.Text.Whitespace, '\\t\\t')",
  "(11842, Token.Text, '--enable-languages=$_languages')",
  "(11872, Token.Text.Whitespace, ' ')",
  "(11873, Token.Text, '\\\\')",
  "(11874, Token.Text.NewLine, '\\n')",
  "(11875, Token.Text.Whitespace, '\\t\\t')",
  "(11877, Token.Text, '$_arch_configure')",
  "(11893, Token.Text.Whitespace, ' ')",
  "(11894, Token.Text, '\\\\')",
  "(11895, Token.Text.NewLine, '\\n')",
  "(11896, Token.Text.Whitespace, '\\t\\t')",
  "(11898, Token.Text, '$_libc_configure')",
  "(11914, Token.Text.Whitespace, ' ')",
  "(11915, Token.Text, '\\\\')",
  "(11916, Token.Text.NewLine, '\\n')",
  "(11917, Token.Text.Whitespace, '\\t\\t')",
  "(11919, Token.Text, '$_cross_configure')",
  "(11936, Token.Text.Whitespace, ' ')",
  "(11937, Token.Text, '\\\\')",
  "(11938, Token.Text.NewLine, '\\n')",
  "(11939, Token.Text.Whitespace, '\\t\\t')",
  "(11941, Token.Text, '$_bootstrap_configure')",
  "(11962, Token.Text.Whitespace, ' ')",
  "(11963, Token.Text, '\\\\')",
  "(11964, Token.Text.NewLine, '\\n')",
  "(11965, Token.Text.Whitespace, '\\t\\t')",
  "(11967, Token.Text, '--with-system-zlib')",
  "(11985, Token.Text.Whitespace, ' ')",
  "(11986, Token.Text, '\\\\')",
  "(11987, Token.Text.NewLine, '\\n')",
  "(11988, Token.Text.Whitespace, '\\t\\t')",
  "(11990, Token.Text, '$_hash_style_configure')",
  "(12012, Token.Text.NewLine, '\\n')",
  "(12013, Token.Text.Whitespace, '\\t')",
  "(12014, Token.Text, 'make')",
  "(12018, Token.Text.NewLine, '\\n')",
  "(12019, Token.Text, '}')",
  "(12020, Token.Text.NewLine, '\\n\\n')",
  "(12022, Token.Text, 'package()')",
  "(12031, Token.Text.Whitespace, ' ')",
  "(12032, Token.Text, '{')",
  "(12033, Token.Text.NewLine, '\\n')",
  "(12034, Token.Text.Whitespace, '\\t')",
  "(12035, Token.Text, 'cd')",
  "(12037, Token.Text.Whitespace, ' ')",
  "(12038, Token.Literal.String.Double, '\"$_builddir\"')",
  "(12050, Token.Text.NewLine, '\\n')",
  "(12051, Token.Text.Whitespace, '\\t')",
  "(12052, Token.Text, 'make')",
  "(12056, Token.Text.Whitespace, ' ')",
  "(12057, Token.Text, '-j1')",
  "(12060, Token.Text.Whitespace, ' ')",
  "(12061, Token.Text, 'DESTDIR=\"$pkgdir\"')",
  "(12078, Token.Text.Whitespace, ' ')",
  "(12079, Token.Text, 'install')",
  "(12086, Token.Text.NewLine, '\\n\\n')",
  "(12088, Token.Text.Whitespace, '\\t')",
  "(12089, Token.Text, 'ln')",
  "(12091, Token.Text.Whitespace, ' ')",
  "(12092, Token.Text, '-s')",
  "(12094, Token.Text.Whitespace, ' ')",
  "(12095, Token.Text, 'gcc')",
  "(12098, Token.Text.Whitespace, ' ')",
  "(12099, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12108, Token.Text, '/usr/bin/cc')",
  "(12119, Token.Text.NewLine, '\\n\\n')",
  "(12121, Token.Text.Whitespace, '\\t')",
  "(12122, Token.Comment.Single, '# we dont support gcj -static')",
  "(12151, Token.Text.NewLine, '\\n')",
  "(12152, Token.Text.Whitespace, '\\t')",
  "(12153, Token.Comment.Single, '# and saving 35MB is not bad.')",
  "(12182, Token.Text.NewLine, '\\n')",
  "(12183, Token.Text.Whitespace, '\\t')",
  "(12184, Token.Text, 'find')",
  "(12188, Token.Text.Whitespace, ' ')",
  "(12189, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12198, Token.Text.Whitespace, ' ')",
  "(12199, Token.Text, '\\\\(')",
  "(12201, Token.Text.Whitespace, ' ')",
  "(12202, Token.Text, '-name')",
  "(12207, Token.Text.Whitespace, ' ')",
  "(12208, Token.Text, 'libgtkpeer.a')",
  "(12220, Token.Text.Whitespace, ' ')",
  "(12221, Token.Text, '\\\\')",
  "(12222, Token.Text.NewLine, '\\n')",
  "(12223, Token.Text.Whitespace, '\\t\\t')",
  "(12225, Token.Text, '-o')",
  "(12227, Token.Text.Whitespace, ' ')",
  "(12228, Token.Text, '-name')",
  "(12233, Token.Text.Whitespace, ' ')",
  "(12234, Token.Text, 'libgjsmalsa.a')",
  "(12247, Token.Text.Whitespace, ' ')",
  "(12248, Token.Text, '\\\\')",
  "(12249, Token.Text.NewLine, '\\n')",
  "(12250, Token.Text.Whitespace, '\\t\\t')",
  "(12252, Token.Text, '-o')",
  "(12254, Token.Text.Whitespace, ' ')",
  "(12255, Token.Text, '-name')",
  "(12260, Token.Text.Whitespace, ' ')",
  "(12261, Token.Text, 'libgij.a')",
  "(12269, Token.Text.Whitespace, ' ')",
  "(12270, Token.Text, '\\\\)')",
  "(12272, Token.Text.Whitespace, ' ')",
  "(12273, Token.Text, '\\\\')",
  "(12274, Token.Text.NewLine, '\\n')",
  "(12275, Token.Text.Whitespace, '\\t\\t')",
  "(12277, Token.Text, '-delete')",
  "(12284, Token.Text.NewLine, '\\n\\n')",
  "(12286, Token.Text.Whitespace, '\\t')",
  "(12287, Token.Comment.Single, '# strip debug info from some static libs')",
  "(12327, Token.Text.NewLine, '\\n')",
  "(12328, Token.Text.Whitespace, '\\t')",
  "(12329, Token.Text, 'find')",
  "(12333, Token.Text.Whitespace, ' ')",
  "(12334, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12343, Token.Text.Whitespace, ' ')",
  "(12344, Token.Text, '\\\\(')",
  "(12346, Token.Text.Whitespace, ' ')",
  "(12347, Token.Text, '-name')",
  "(12352, Token.Text.Whitespace, ' ')",
  "(12353, Token.Text, 'libgfortran.a')",
  "(12366, Token.Text.Whitespace, ' ')",
  "(12367, Token.Text, '-o')",
  "(12369, Token.Text.Whitespace, ' ')",
  "(12370, Token.Text, '-name')",
  "(12375, Token.Text.Whitespace, ' ')",
  "(12376, Token.Text, 'libobjc.a')",
  "(12385, Token.Text.Whitespace, ' ')",
  "(12386, Token.Text, '-o')",
  "(12388, Token.Text.Whitespace, ' ')",
  "(12389, Token.Text, '-name')",
  "(12394, Token.Text.Whitespace, ' ')",
  "(12395, Token.Text, 'libgomp.a')",
  "(12404, Token.Text.Whitespace, ' ')",
  "(12405, Token.Text, '\\\\')",
  "(12406, Token.Text.NewLine, '\\n')",
  "(12407, Token.Text.Whitespace, '\\t\\t')",
  "(12409, Token.Text, '-o')",
  "(12411, Token.Text.Whitespace, ' ')",
  "(12412, Token.Text, '-name')",
  "(12417, Token.Text.Whitespace, ' ')",
  "(12418, Token.Text, 'libgphobos.a')",
  "(12430, Token.Text.Whitespace, ' ')",
  "(12431, Token.Text, '-o')",
  "(12433, Token.Text.Whitespace, ' ')",
  "(12434, Token.Text, '-name')",
  "(12439, Token.Text.Whitespace, ' ')",
  "(12440, Token.Text, 'libgdruntime.a')",
  "(12454, Token.Text.Whitespace, ' ')",
  "(12455, Token.Text, '\\\\')",
  "(12456, Token.Text.NewLine, '\\n')",
  "(12457, Token.Text.Whitespace, '\\t\\t')",
  "(12459, Token.Text, '-o')",
  "(12461, Token.Text.Whitespace, ' ')",
  "(12462, Token.Text, '-name')",
  "(12467, Token.Text.Whitespace, ' ')",
  "(12468, Token.Text, 'libmudflap.a')",
  "(12480, Token.Text.Whitespace, ' ')",
  "(12481, Token.Text, '-o')",
  "(12483, Token.Text.Whitespace, ' ')",
  "(12484, Token.Text, '-name')",
  "(12489, Token.Text.Whitespace, ' ')",
  "(12490, Token.Text, 'libmudflapth.a')",
  "(12504, Token.Text.Whitespace, ' ')",
  "(12505, Token.Text, '\\\\')",
  "(12506, Token.Text.NewLine, '\\n')",
  "(12507, Token.Text.Whitespace, '\\t\\t')",
  "(12509, Token.Text, '-o')",
  "(12511, Token.Text.Whitespace, ' ')",
  "(12512, Token.Text, '-name')",
  "(12517, Token.Text.Whitespace, ' ')",
  "(12518, Token.Text, 'libgcc.a')",
  "(12526, Token.Text.Whitespace, ' ')",
  "(12527, Token.Text, '-o')",
  "(12529, Token.Text.Whitespace, ' ')",
  "(12530, Token.Text, '-name')",
  "(12535, Token.Text.Whitespace, ' ')",
  "(12536, Token.Text, 'libgcov.a')",
  "(12545, Token.Text.Whitespace, ' ')",
  "(12546, Token.Text, '-o')",
  "(12548, Token.Text.Whitespace, ' ')",
  "(12549, Token.Text, '-name')",
  "(12554, Token.Text.Whitespace, ' ')",
  "(12555, Token.Text, 'libquadmath.a')",
  "(12568, Token.Text.Whitespace, ' ')",
  "(12569, Token.Text, '\\\\')",
  "(12570, Token.Text.NewLine, '\\n')",
  "(12571, Token.Text.Whitespace, '\\t\\t')",
  "(12573, Token.Text, '-o')",
  "(12575, Token.Text.Whitespace, ' ')",
  "(12576, Token.Text, '-name')",
  "(12581, Token.Text.Whitespace, ' ')",
  "(12582, Token.Text, 'libitm.a')",
  "(12590, Token.Text.Whitespace, ' ')",
  "(12591, Token.Text, '-o')",
  "(12593, Token.Text.Whitespace, ' ')",
  "(12594, Token.Text, '-name')",
  "(12599, Token.Text.Whitespace, ' ')",
  "(12600, Token.Text, 'libgo.a')",
  "(12607, Token.Text.Whitespace, ' ')",
  "(12608, Token.Text, '-o')",
  "(12610, Token.Text.Whitespace, ' ')",
  "(12611, Token.Text, '-name')",
  "(12616, Token.Text.Whitespace, ' ')",
  "(12617, Token.Text, 'libcaf\\\\*.a')",
  "(12627, Token.Text.Whitespace, ' ')",
  "(12628, Token.Text, '\\\\')",
  "(12629, Token.Text.NewLine, '\\n')",
  "(12630, Token.Text.Whitespace, '\\t\\t')",
  "(12632, Token.Text, '-o')",
  "(12634, Token.Text.Whitespace, ' ')",
  "(12635, Token.Text, '-name')",
  "(12640, Token.Text.Whitespace, ' ')",
  "(12641, Token.Text, 'libatomic.a')",
  "(12652, Token.Text.Whitespace, ' ')",
  "(12653, Token.Text, '-o')",
  "(12655, Token.Text.Whitespace, ' ')",
  "(12656, Token.Text, '-name')",
  "(12661, Token.Text.Whitespace, ' ')",
  "(12662, Token.Text, 'libasan.a')",
  "(12671, Token.Text.Whitespace, ' ')",
  "(12672, Token.Text, '-o')",
  "(12674, Token.Text.Whitespace, ' ')",
  "(12675, Token.Text, '-name')",
  "(12680, Token.Text.Whitespace, ' ')",
  "(12681, Token.Text, 'libtsan.a')",
  "(12690, Token.Text.Whitespace, ' ')",
  "(12691, Token.Text, '\\\\)')",
  "(12693, Token.Text.Whitespace, ' ')",
  "(12694, Token.Text, '\\\\')",
  "(12695, Token.Text.NewLine, '\\n')",
  "(12696, Token.Text.Whitespace, '\\t\\t')",
  "(12698, Token.Text, '-a')",
  "(12700, Token.Text.Whitespace, ' ')",
  "(12701, Token.Text, '-type')",
  "(12706, Token.Text.Whitespace, ' ')",
  "(12707, Token.Text, 'f')",
  "(12708, Token.Text.Whitespace, ' ')",
  "(12709, Token.Text, '\\\\')",
  "(12710, Token.Text.NewLine, '\\n')",
  "(12711, Token.Text.Whitespace, '\\t\\t')",
  "(12713, Token.Text, '-exec')",
  "(12718, Token.Text.Whitespace, ' ')",
  "(12719, Token.Text, '${STRIP_FOR_TARGET}')",
  "(12738, Token.Text.Whitespace, ' ')",
  "(12739, Token.Text, '-g')",
  "(12741, Token.Text.Whitespace, ' ')",
  "(12742, Token.Text, '{}')",
  "(12744, Token.Text.Whitespace, ' ')",
  "(12745, Token.Text, '+')",
  "(12746, Token.Text.NewLine, '\\n\\n')",
  "(12748, Token.Text.Whitespace, '\\t')",
  "(12749, Token.Text, 'if')",
  "(12751, Token.Text.Whitespace, ' ')",
  "(12752, Token.Text, '$_libgomp;')",
  "(12762, Token.Text.Whitespace, ' ')",
  "(12763, Token.Text, 'then')",
  "(12767, Token.Text.NewLine, '\\n')",
  "(12768, Token.Text.Whitespace, '\\t\\t')",
  "(12770, Token.Text, 'mv')",
  "(12772, Token.Text.Whitespace, ' ')",
  "(12773, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12782, Token.Text, '/usr/lib/libgomp.spec')",
  "(12803, Token.Text.Whitespace, ' ')",
  "(12804, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12813, Token.Text, '/$_gcclibdir')",
  "(12825, Token.Text.NewLine, '\\n')",
  "(12826, Token.Text.Whitespace, '\\t')",
  "(12827, Token.Text, 'fi')",
  "(12829, Token.Text.NewLine, '\\n')",
  "(12830, Token.Text.Whitespace, '\\t')",
  "(12831, Token.Text, 'if')",
  "(12833, Token.Text.Whitespace, ' ')",
  "(12834, Token.Text, '$_libitm;')",
  "(12843, Token.Text.Whitespace, ' ')",
  "(12844, Token.Text, 'then')",
  "(12848, Token.Text.NewLine, '\\n')",
  "(12849, Token.Text.Whitespace, '\\t\\t')",
  "(12851, Token.Text, 'mv')",
  "(12853, Token.Text.Whitespace, ' ')",
  "(12854, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12863, Token.Text, '/usr/lib/libitm.spec')",
  "(12883, Token.Text.Whitespace, ' ')",
  "(12884, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12893, Token.Text, '/$_gcclibdir')",
  "(12905, Token.Text.NewLine, '\\n')",
  "(12906, Token.Text.Whitespace, '\\t')",
  "(12907, Token.Text, 'fi')",
  "(12909, Token.Text.NewLine, '\\n\\n')",
  "(12911, Token.Text.Whitespace, '\\t')",
  "(12912, Token.Comment.Single, '# remove ffi')",
  "(12924, Token.Text.NewLine, '\\n')",
  "(12925, Token.Text.Whitespace, '\\t')",
  "(12926, Token.Text, 'rm')",
  "(12928, Token.Text.Whitespace, ' ')",
  "(12929, Token.Text, '-f')",
  "(12931, Token.Text.Whitespace, ' ')",
  "(12932, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12941, Token.Text, '/usr/lib/libffi*')",
  "(12957, Token.Text.Whitespace, ' ')",
  "(12958, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(12967, Token.Text, '/usr/share/man/man3/ffi*')",
  "(12991, Token.Text.NewLine, '\\n')",
  "(12992, Token.Text.Whitespace, '\\t')",
  "(12993, Token.Text, 'find')",
  "(12997, Token.Text.Whitespace, ' ')",
  "(12998, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13007, Token.Text.Whitespace, ' ')",
  "(13008, Token.Text, '-name')",
  "(13013, Token.Text.Whitespace, ' ')",
  "(13014, Token.Literal.String.Single, \"'ffi*.h'\")",
  "(13022, Token.Text.Whitespace, ' ')",
  "(13023, Token.Text, '-delete')",
  "(13030, Token.Text.NewLine, '\\n\\n')",
  "(13032, Token.Text.Whitespace, '\\t')",
  "(13033, Token.Text, 'local')",
  "(13038, Token.Text.Whitespace, ' ')",
  "(13039, Token.Text, 'gdblib=${_target:+$CTARGET/}lib')",
  "(13070, Token.Text.NewLine, '\\n')",
  "(13071, Token.Text.Whitespace, '\\t')",
  "(13072, Token.Text, 'if')",
  "(13074, Token.Text.Whitespace, ' ')",
  "(13075, Token.Text, '[')",
  "(13076, Token.Text.Whitespace, ' ')",
  "(13077, Token.Text, '-d')",
  "(13079, Token.Text.Whitespace, ' ')",
  "(13080, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13089, Token.Text, '/usr/$gdblib/')",
  "(13102, Token.Text.Whitespace, ' ')",
  "(13103, Token.Text, '];')",
  "(13105, Token.Text.Whitespace, ' ')",
  "(13106, Token.Text, 'then')",
  "(13110, Token.Text.NewLine, '\\n')",
  "(13111, Token.Text.Whitespace, '\\t\\t')",
  "(13113, Token.Text, 'for')",
  "(13116, Token.Text.Whitespace, ' ')",
  "(13117, Token.Text, 'i')",
  "(13118, Token.Text.Whitespace, ' ')",
  "(13119, Token.Text, 'in')",
  "(13121, Token.Text.Whitespace, ' ')",
  "(13122, Token.Text, '$(find')",
  "(13128, Token.Text.Whitespace, ' ')",
  "(13129, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13138, Token.Text, '/usr/$gdblib/')",
  "(13151, Token.Text.Whitespace, ' ')",
  "(13152, Token.Text, '-type')",
  "(13157, Token.Text.Whitespace, ' ')",
  "(13158, Token.Text, 'f')",
  "(13159, Token.Text.Whitespace, ' ')",
  "(13160, Token.Text, '-maxdepth')",
  "(13169, Token.Text.Whitespace, ' ')",
  "(13170, Token.Text, '1')",
  "(13171, Token.Text.Whitespace, ' ')",
  "(13172, Token.Text, '-name')",
  "(13177, Token.Text.Whitespace, ' ')",
  "(13178, Token.Literal.String.Double, '\"*-gdb.py\"')",
  "(13188, Token.Text, ');')",
  "(13190, Token.Text.Whitespace, ' ')",
  "(13191, Token.Text, 'do')",
  "(13193, Token.Text.NewLine, '\\n')",
  "(13194, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13197, Token.Text, 'mkdir')",
  "(13202, Token.Text.Whitespace, ' ')",
  "(13203, Token.Text, '-p')",
  "(13205, Token.Text.Whitespace, ' ')",
  "(13206, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13215, Token.Text, '/usr/share/gdb/python/auto-load/usr/$gdblib')",
  "(13258, Token.Text.NewLine, '\\n')",
  "(13259, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13262, Token.Text, 'mv')",
  "(13264, Token.Text.Whitespace, ' ')",
  "(13265, Token.Literal.String.Double, '\"$i\"')",
  "(13269, Token.Text.Whitespace, ' ')",
  "(13270, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13279, Token.Text, '/usr/share/gdb/python/auto-load/usr/$gdblib/')",
  "(13323, Token.Text.NewLine, '\\n')",
  "(13324, Token.Text.Whitespace, '\\t\\t')",
  "(13326, Token.Text, 'done')",
  "(13330, Token.Text.NewLine, '\\n')",
  "(13331, Token.Text.Whitespace, '\\t')",
  "(13332, Token.Text, 'fi')",
  "(13334, Token.Text.NewLine, '\\n\\n')",
  "(13336, Token.Text.Whitespace, '\\t')",
  "(13337, Token.Comment.Single, '# move ada runtime libs')",
  "(13360, Token.Text.NewLine, '\\n')",
  "(13361, Token.Text.Whitespace, '\\t')",
  "(13362, Token.Text, 'if')",
  "(13364, Token.Text.Whitespace, ' ')",
  "(13365, Token.Text, '$LANG_ADA;')",
  "(13375, Token.Text.Whitespace, ' ')",
  "(13376, Token.Text, 'then')",
  "(13380, Token.Text.NewLine, '\\n')",
  "(13381, Token.Text.Whitespace, '\\t\\t')",
  "(13383, Token.Text, 'for')",
  "(13386, Token.Text.Whitespace, ' ')",
  "(13387, Token.Text, 'i')",
  "(13388, Token.Text.Whitespace, ' ')",
  "(13389, Token.Text, 'in')",
  "(13391, Token.Text.Whitespace, ' ')",
  "(13392, Token.Text, '$(find')",
  "(13398, Token.Text.Whitespace, ' ')",
  "(13399, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13408, Token.Text, '/$_gcclibdir/adalib/')",
  "(13428, Token.Text.Whitespace, ' ')",
  "(13429, Token.Text, '-type')",
  "(13434, Token.Text.Whitespace, ' ')",
  "(13435, Token.Text, 'f')",
  "(13436, Token.Text.Whitespace, ' ')",
  "(13437, Token.Text, '-maxdepth')",
  "(13446, Token.Text.Whitespace, ' ')",
  "(13447, Token.Text, '1')",
  "(13448, Token.Text.Whitespace, ' ')",
  "(13449, Token.Text, '-name')",
  "(13454, Token.Text.Whitespace, ' ')",
  "(13455, Token.Literal.String.Double, '\"libgna*.so\"')",
  "(13467, Token.Text, ');')",
  "(13469, Token.Text.Whitespace, ' ')",
  "(13470, Token.Text, 'do')",
  "(13472, Token.Text.NewLine, '\\n')",
  "(13473, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13476, Token.Text, 'mv')",
  "(13478, Token.Text.Whitespace, ' ')",
  "(13479, Token.Literal.String.Double, '\"$i\"')",
  "(13483, Token.Text.Whitespace, ' ')",
  "(13484, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13493, Token.Text, '/usr/lib/')",
  "(13502, Token.Text.NewLine, '\\n')",
  "(13503, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13506, Token.Text, 'ln')",
  "(13508, Token.Text.Whitespace, ' ')",
  "(13509, Token.Text, '-s')",
  "(13511, Token.Text.Whitespace, ' ')",
  "(13512, Token.Text, '../../../../${i##*/}')",
  "(13532, Token.Text.Whitespace, ' ')",
  "(13533, Token.Text, '$i')",
  "(13535, Token.Text.NewLine, '\\n')",
  "(13536, Token.Text.Whitespace, '\\t\\t')",
  "(13538, Token.Text, 'done')",
  "(13542, Token.Text.NewLine, '\\n')",
  "(13543, Token.Text.Whitespace, '\\t\\t')",
  "(13545, Token.Text, 'for')",
  "(13548, Token.Text.Whitespace, ' ')",
  "(13549, Token.Text, 'i')",
  "(13550, Token.Text.Whitespace, ' ')",
  "(13551, Token.Text, 'in')",
  "(13553, Token.Text.Whitespace, ' ')",
  "(13554, Token.Text, '$(find')",
  "(13560, Token.Text.Whitespace, ' ')",
  "(13561, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13570, Token.Text, '/$_gcclibdir/adalib/')",
  "(13590, Token.Text.Whitespace, ' ')",
  "(13591, Token.Text, '-type')",
  "(13596, Token.Text.Whitespace, ' ')",
  "(13597, Token.Text, 'f')",
  "(13598, Token.Text.Whitespace, ' ')",
  "(13599, Token.Text, '-maxdepth')",
  "(13608, Token.Text.Whitespace, ' ')",
  "(13609, Token.Text, '1')",
  "(13610, Token.Text.Whitespace, ' ')",
  "(13611, Token.Text, '-name')",
  "(13616, Token.Text.Whitespace, ' ')",
  "(13617, Token.Literal.String.Double, '\"libgna*.a\"')",
  "(13628, Token.Text, ');')",
  "(13630, Token.Text.Whitespace, ' ')",
  "(13631, Token.Text, 'do')",
  "(13633, Token.Text.NewLine, '\\n')",
  "(13634, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13637, Token.Text, 'mv')",
  "(13639, Token.Text.Whitespace, ' ')",
  "(13640, Token.Literal.String.Double, '\"$i\"')",
  "(13644, Token.Text.Whitespace, ' ')",
  "(13645, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13654, Token.Text, '/usr/lib/')",
  "(13663, Token.Text.NewLine, '\\n')",
  "(13664, Token.Text.Whitespace, '\\t\\t\\t')",
  "(13667, Token.Text, 'ln')",
  "(13669, Token.Text.Whitespace, ' ')",
  "(13670, Token.Text, '-s')",
  "(13672, Token.Text.Whitespace, ' ')",
  "(13673, Token.Text, '../../../../${i##*/}')",
  "(13693, Token.Text.Whitespace, ' ')",
  "(13694, Token.Text, '$i')",
  "(13696, Token.Text.NewLine, '\\n')",
  "(13697, Token.Text.Whitespace, '\\t\\t')",
  "(13699, Token.Text, 'done')",
  "(13703, Token.Text.NewLine, '\\n')",
  "(13704, Token.Text.Whitespace, '\\t')",
  "(13705, Token.Text, 'fi')",
  "(13707, Token.Text.NewLine, '\\n\\n')",
  "(13709, Token.Text.Whitespace, '\\t')",
  "(13710, Token.Text, 'if')",
  "(13712, Token.Text.Whitespace, ' ')",
  "(13713, Token.Text, '[')",
  "(13714, Token.Text.Whitespace, ' ')",
  "(13715, Token.Literal.String.Double, '\"$CHOST\"')",
  "(13723, Token.Text.Whitespace, ' ')",
  "(13724, Token.Text, '!=')",
  "(13726, Token.Text.Whitespace, ' ')",
  "(13727, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(13737, Token.Text.Whitespace, ' ')",
  "(13738, Token.Text, '];')",
  "(13740, Token.Text.Whitespace, ' ')",
  "(13741, Token.Text, 'then')",
  "(13745, Token.Text.NewLine, '\\n')",
  "(13746, Token.Text.Whitespace, '\\t\\t')",
  "(13748, Token.Comment.Single, '# cross-gcc: remove any files that would conflict with the')",
  "(13806, Token.Text.NewLine, '\\n')",
  "(13807, Token.Text.Whitespace, '\\t\\t')",
  "(13809, Token.Comment.Single, '# native gcc package')",
  "(13829, Token.Text.NewLine, '\\n')",
  "(13830, Token.Text.Whitespace, '\\t\\t')",
  "(13832, Token.Text, 'rm')",
  "(13834, Token.Text.Whitespace, ' ')",
  "(13835, Token.Text, '-rf')",
  "(13838, Token.Text.Whitespace, ' ')",
  "(13839, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13848, Token.Text, '/usr/bin/cc')",
  "(13859, Token.Text.Whitespace, ' ')",
  "(13860, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13869, Token.Text, '/usr/include')",
  "(13881, Token.Text.Whitespace, ' ')",
  "(13882, Token.Literal.String.Double, '\"${pkgdir:?}\"')",
  "(13895, Token.Text, '/usr/share')",
  "(13905, Token.Text.NewLine, '\\n')",
  "(13906, Token.Text.Whitespace, '\\t\\t')",
  "(13908, Token.Comment.Single, \"# libcc1 does not depend on target, don't ship it\")",
  "(13957, Token.Text.NewLine, '\\n')",
  "(13958, Token.Text.Whitespace, '\\t\\t')",
  "(13960, Token.Text, 'rm')",
  "(13962, Token.Text.Whitespace, ' ')",
  "(13963, Token.Text, '-rf')",
  "(13966, Token.Text.Whitespace, ' ')",
  "(13967, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(13976, Token.Text, '/usr/lib/libcc1.so*')",
  "(13995, Token.Text.NewLine, '\\n\\n')",
  "(13997, Token.Text.Whitespace, '\\t\\t')",
  "(13999, Token.Comment.Single, '# fixup gcc library symlinks to be linker scripts so')",
  "(14051, Token.Text.NewLine, '\\n')",
  "(14052, Token.Text.Whitespace, '\\t\\t')",
  "(14054, Token.Comment.Single, '# linker finds the libs from relocated sysroot')",
  "(14100, Token.Text.NewLine, '\\n')",
  "(14101, Token.Text.Whitespace, '\\t\\t')",
  "(14103, Token.Text, 'for')",
  "(14106, Token.Text.Whitespace, ' ')",
  "(14107, Token.Text, 'so')",
  "(14109, Token.Text.Whitespace, ' ')",
  "(14110, Token.Text, 'in')",
  "(14112, Token.Text.Whitespace, ' ')",
  "(14113, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(14122, Token.Text, '/usr/\"$CTARGET\"/lib/*.so;')",
  "(14147, Token.Text.Whitespace, ' ')",
  "(14148, Token.Text, 'do')",
  "(14150, Token.Text.NewLine, '\\n')",
  "(14151, Token.Text.Whitespace, '\\t\\t\\t')",
  "(14154, Token.Text, 'if')",
  "(14156, Token.Text.Whitespace, ' ')",
  "(14157, Token.Text, '[')",
  "(14158, Token.Text.Whitespace, ' ')",
  "(14159, Token.Text, '-h')",
  "(14161, Token.Text.Whitespace, ' ')",
  "(14162, Token.Literal.String.Double, '\"$so\"')",
  "(14167, Token.Text.Whitespace, ' ')",
  "(14168, Token.Text, '];')",
  "(14170, Token.Text.Whitespace, ' ')",
  "(14171, Token.Text, 'then')",
  "(14175, Token.Text.NewLine, '\\n')",
  "(14176, Token.Text.Whitespace, '\\t\\t\\t\\t')",
  "(14180, Token.Text, 'local')",
  "(14185, Token.Text.Whitespace, ' ')",
  "(14186, Token.Text, '_real=$(basename')",
  "(14202, Token.Text.Whitespace, ' ')",
  "(14203, Token.Literal.String.Double, '\"$(readlink \"')",
  "(14216, Token.Text, '$so\")\")')",
  "(14223, Token.Text.NewLine, '\\n')",
  "(14224, Token.Text.Whitespace, '\\t\\t\\t\\t')",
  "(14228, Token.Text, 'rm')",
  "(14230, Token.Text.Whitespace, ' ')",
  "(14231, Token.Text, '-f')",
  "(14233, Token.Text.Whitespace, ' ')",
  "(14234, Token.Literal.String.Double, '\"$so\"')",
  "(14239, Token.Text.NewLine, '\\n')",
  "(14240, Token.Text.Whitespace, '\\t\\t\\t\\t')",
  "(14244, Token.Text, 'echo')",
  "(14248, Token.Text.Whitespace, ' ')",
  "(14249, Token.Literal.String.Double, '\"GROUP ($_real)\"')",
  "(14265, Token.Text.Whitespace, ' ')",
  "(14266, Token.Text, '>')",
  "(14267, Token.Text.Whitespace, ' ')",
  "(14268, Token.Literal.String.Double, '\"$so\"')",
  "(14273, Token.Text.NewLine, '\\n')",
  "(14274, Token.Text.Whitespace, '\\t\\t\\t')",
  "(14277, Token.Text, 'fi')",
  "(14279, Token.Text.NewLine, '\\n')",
  "(14280, Token.Text.Whitespace, '\\t\\t')",
  "(14282, Token.Text, 'done')",
  "(14286, Token.Text.NewLine, '\\n')",
  "(14287, Token.Text.Whitespace, '\\t')",
  "(14288, Token.Text, 'else')",
  "(14292, Token.Text.NewLine, '\\n')",
  "(14293, Token.Text.Whitespace, '\\t\\t')",
  "(14295, Token.Comment.Single, '# add c89/c99 wrapper scripts')",
  "(14324, Token.Text.NewLine, '\\n')",
  "(14325, Token.Text.Whitespace, '\\t\\t')",
  "(14327, Token.Text, 'cat')",
  "(14330, Token.Text.Whitespace, ' ')",
  "(14331, Token.Text, '>\"$pkgdir\"/usr/bin/c89')",
  "(14353, Token.Text.Whitespace, ' ')",
  "(14354, Token.Text, \"<<'EOF'\")",
  "(14361, Token.Text.NewLine, '\\n')",
  "(14362, Token.Comment.Single, '#!/bin/sh')",
  "(14371, Token.Text.NewLine, '\\n')",
  "(14372, Token.Name.Variable, '_flavor')",
  "(14379, Token.Operator.Equal, '=')",
  "(14380, Token.Literal.String.Double, '\"-std=c89\"')",
  "(14390, Token.Text.NewLine, '\\n')",
  "(14391, Token.Text, 'for')",
  "(14394, Token.Text.Whitespace, ' ')",
  "(14395, Token.Text, 'opt;')",
  "(14399, Token.Text.Whitespace, ' ')",
  "(14400, Token.Text, 'do')",
  "(14402, Token.Text.NewLine, '\\n')",
  "(14403, Token.Text.Whitespace, '\\t')",
  "(14404, Token.Text, 'case')",
  "(14408, Token.Text.Whitespace, ' ')",
  "(14409, Token.Literal.String.Double, '\"$opt\"')",
  "(14415, Token.Text.Whitespace, ' ')",
  "(14416, Token.Text, 'in')",
  "(14418, Token.Text.NewLine, '\\n')",
  "(14419, Token.Text.Whitespace, '\\t')",
  "(14420, Token.Text, '-ansi|-std=c89|-std=iso9899:1990)')",
  "(14453, Token.Text.Whitespace, ' ')",
  "(14454, Token.Text, '_flavor=\"\";;')",
  "(14466, Token.Text.NewLine, '\\n')",
  "(14467, Token.Text.Whitespace, '\\t')",
  "(14468, Token.Text, '-std=*)')",
  "(14475, Token.Text.Whitespace, ' ')",
  "(14476, Token.Text, 'echo')",
  "(14480, Token.Text.Whitespace, ' ')",
  "(14481, Token.Literal.String.Double, '\"$(basename $0) called with non ANSI/ISO C option $opt\"')",
  "(14536, Token.Text.Whitespace, ' ')",
  "(14537, Token.Text, '>&2')",
  "(14540, Token.Text.NewLine, '\\n')",
  "(14541, Token.Text.Whitespace, '\\t\\t')",
  "(14543, Token.Text, 'exit')",
  "(14547, Token.Text.Whitespace, ' ')",
  "(14548, Token.Text, '1;;')",
  "(14551, Token.Text.NewLine, '\\n')",
  "(14552, Token.Text.Whitespace, '\\t')",
  "(14553, Token.Text, 'esac')",
  "(14557, Token.Text.NewLine, '\\n')",
  "(14558, Token.Text, 'done')",
  "(14562, Token.Text.NewLine, '\\n')",
  "(14563, Token.Text, 'exec')",
  "(14567, Token.Text.Whitespace, ' ')",
  "(14568, Token.Text, 'gcc')",
  "(14571, Token.Text.Whitespace, ' ')",
  "(14572, Token.Text, '$_flavor')",
  "(14580, Token.Text.Whitespace, ' ')",
  "(14581, Token.Text, '${1+\"$@\"}')",
  "(14590, Token.Text.NewLine, '\\n')",
  "(14591, Token.Text, 'EOF')",
  "(14594, Token.Text.NewLine, '\\n')",
  "(14595, Token.Text.Whitespace, '\\t\\t')",
  "(14597, Token.Text, 'cat')",
  "(14600, Token.Text.Whitespace, ' ')",
  "(14601, Token.Text, '>\"$pkgdir\"/usr/bin/c99')",
  "(14623, Token.Text.Whitespace, ' ')",
  "(14624, Token.Text, \"<<'EOF'\")",
  "(14631, Token.Text.NewLine, '\\n')",
  "(14632, Token.Comment.Single, '#!/bin/sh')",
  "(14641, Token.Text.NewLine, '\\n')",
  "(14642, Token.Name.Variable, '_flavor')",
  "(14649, Token.Operator.Equal, '=')",
  "(14650, Token.Literal.String.Double, '\"-std=c99\"')",
  "(14660, Token.Text.NewLine, '\\n')",
  "(14661, Token.Text, 'for')",
  "(14664, Token.Text.Whitespace, ' ')",
  "(14665, Token.Text, 'opt;')",
  "(14669, Token.Text.Whitespace, ' ')",
  "(14670, Token.Text, 'do')",
  "(14672, Token.Text.NewLine, '\\n')",
  "(14673, Token.Text.Whitespace, '\\t')",
  "(14674, Token.Text, 'case')",
  "(14678, Token.Text.Whitespace, ' ')",
  "(14679, Token.Literal.String.Double, '\"$opt\"')",
  "(14685, Token.Text.Whitespace, ' ')",
  "(14686, Token.Text, 'in')",
  "(14688, Token.Text.NewLine, '\\n')",
  "(14689, Token.Text.Whitespace, '\\t')",
  "(14690, Token.Text, '-std=c99|-std=iso9899:1999)')",
  "(14717, Token.Text.Whitespace, ' ')",
  "(14718, Token.Text, '_flavor=\"\";;')",
  "(14730, Token.Text.NewLine, '\\n')",
  "(14731, Token.Text.Whitespace, '\\t')",
  "(14732, Token.Text, '-std=*)')",
  "(14739, Token.Text.Whitespace, ' ')",
  "(14740, Token.Text, 'echo')",
  "(14744, Token.Text.Whitespace, ' ')",
  "(14745, Token.Literal.String.Double, '\"$(basename $0) called with non ISO C99 option $opt\"')",
  "(14797, Token.Text.Whitespace, ' ')",
  "(14798, Token.Text, '>&2')",
  "(14801, Token.Text.NewLine, '\\n')",
  "(14802, Token.Text.Whitespace, '\\t\\t')",
  "(14804, Token.Text, 'exit')",
  "(14808, Token.Text.Whitespace, ' ')",
  "(14809, Token.Text, '1;;')",
  "(14812, Token.Text.NewLine, '\\n')",
  "(14813, Token.Text.Whitespace, '\\t')",
  "(14814, Token.Text, 'esac')",
  "(14818, Token.Text.NewLine, '\\n')",
  "(14819, Token.Text, 'done')",
  "(14823, Token.Text.NewLine, '\\n')",
  "(14824, Token.Text, 'exec')",
  "(14828, Token.Text.Whitespace, ' ')",
  "(14829, Token.Text, 'gcc')",
  "(14832, Token.Text.Whitespace, ' ')",
  "(14833, Token.Text, '$_flavor')",
  "(14841, Token.Text.Whitespace, ' ')",
  "(14842, Token.Text, '${1+\"$@\"}')",
  "(14851, Token.Text.NewLine, '\\n')",
  "(14852, Token.Text, 'EOF')",
  "(14855, Token.Text.NewLine, '\\n')",
  "(14856, Token.Text.Whitespace, '\\t\\t')",
  "(14858, Token.Text, 'chmod')",
  "(14863, Token.Text.Whitespace, ' ')",
  "(14864, Token.Text, '755')",
  "(14867, Token.Text.Whitespace, ' ')",
  "(14868, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(14877, Token.Text, '/usr/bin/c?9')",
  "(14889, Token.Text.NewLine, '\\n\\n')",
  "(14891, Token.Text.Whitespace, '\\t\\t')",
  "(14893, Token.Comment.Single, '# install lto plugin so regular binutils may use it')",
  "(14944, Token.Text.NewLine, '\\n')",
  "(14945, Token.Text.Whitespace, '\\t\\t')",
  "(14947, Token.Text, 'mkdir')",
  "(14952, Token.Text.Whitespace, ' ')",
  "(14953, Token.Text, '-p')",
  "(14955, Token.Text.Whitespace, ' ')",
  "(14956, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(14965, Token.Text, '/usr/lib/bfd-plugins')",
  "(14985, Token.Text.NewLine, '\\n')",
  "(14986, Token.Text.Whitespace, '\\t\\t')",
  "(14988, Token.Text, 'ln')",
  "(14990, Token.Text.Whitespace, ' ')",
  "(14991, Token.Text, '-s')",
  "(14993, Token.Text.Whitespace, ' ')",
  "(14994, Token.Text, '/$_gcclibexec/liblto_plugin.so')",
  "(15024, Token.Text.Whitespace, ' ')",
  "(15025, Token.Literal.String.Double, '\"$pkgdir/usr/lib/bfd-plugins/\"')",
  "(15055, Token.Text.NewLine, '\\n')",
  "(15056, Token.Text.Whitespace, '\\t')",
  "(15057, Token.Text, 'fi')",
  "(15059, Token.Text.NewLine, '\\n')",
  "(15060, Token.Text, '}')",
  "(15061, Token.Text.NewLine, '\\n\\n')",
  "(15063, Token.Text, 'libatomic()')",
  "(15074, Token.Text.Whitespace, ' ')",
  "(15075, Token.Text, '{')",
  "(15076, Token.Text.NewLine, '\\n')",
  "(15077, Token.Text.Whitespace, '\\t')",
  "(15078, Token.Text, 'pkgdesc=\"GCC')",
  "(15090, Token.Text.Whitespace, ' ')",
  "(15091, Token.Text, 'Atomic')",
  "(15097, Token.Text.Whitespace, ' ')",
  "(15098, Token.Text, 'library\"')",
  "(15106, Token.Text.NewLine, '\\n')",
  "(15107, Token.Text.Whitespace, '\\t')",
  "(15108, Token.Text, 'depends=')",
  "(15116, Token.Text.NewLine, '\\n')",
  "(15117, Token.Text.Whitespace, '\\t')",
  "(15118, Token.Text, 'replaces=\"gcc\"')",
  "(15132, Token.Text.NewLine, '\\n\\n')",
  "(15134, Token.Text.Whitespace, '\\t')",
  "(15135, Token.Text, 'mkdir')",
  "(15140, Token.Text.Whitespace, ' ')",
  "(15141, Token.Text, '-p')",
  "(15143, Token.Text.Whitespace, ' ')",
  "(15144, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15156, Token.Text, '/usr/lib')",
  "(15164, Token.Text.NewLine, '\\n')",
  "(15165, Token.Text.Whitespace, '\\t')",
  "(15166, Token.Text, 'mv')",
  "(15168, Token.Text.Whitespace, ' ')",
  "(15169, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(15178, Token.Text, '/usr/${_target:+$CTARGET/}lib/libatomic.so.*')",
  "(15222, Token.Text.Whitespace, ' ')",
  "(15223, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15235, Token.Text, '/usr/lib/')",
  "(15244, Token.Text.NewLine, '\\n')",
  "(15245, Token.Text, '}')",
  "(15246, Token.Text.NewLine, '\\n\\n')",
  "(15248, Token.Text, 'libcxx()')",
  "(15256, Token.Text.Whitespace, ' ')",
  "(15257, Token.Text, '{')",
  "(15258, Token.Text.NewLine, '\\n')",
  "(15259, Token.Text.Whitespace, '\\t')",
  "(15260, Token.Text, 'pkgdesc=\"GNU')",
  "(15272, Token.Text.Whitespace, ' ')",
  "(15273, Token.Text, 'C++')",
  "(15276, Token.Text.Whitespace, ' ')",
  "(15277, Token.Text, 'standard')",
  "(15285, Token.Text.Whitespace, ' ')",
  "(15286, Token.Text, 'runtime')",
  "(15293, Token.Text.Whitespace, ' ')",
  "(15294, Token.Text, 'library\"')",
  "(15302, Token.Text.NewLine, '\\n')",
  "(15303, Token.Text.Whitespace, '\\t')",
  "(15304, Token.Text, 'depends=')",
  "(15312, Token.Text.NewLine, '\\n\\n')",
  "(15314, Token.Text.Whitespace, '\\t')",
  "(15315, Token.Text, 'if')",
  "(15317, Token.Text.Whitespace, ' ')",
  "(15318, Token.Text, '[')",
  "(15319, Token.Text.Whitespace, ' ')",
  "(15320, Token.Literal.String.Double, '\"$CHOST\"')",
  "(15328, Token.Text.Whitespace, ' ')",
  "(15329, Token.Text, '=')",
  "(15330, Token.Text.Whitespace, ' ')",
  "(15331, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(15341, Token.Text.Whitespace, ' ')",
  "(15342, Token.Text, '];')",
  "(15344, Token.Text.Whitespace, ' ')",
  "(15345, Token.Text, 'then')",
  "(15349, Token.Text.NewLine, '\\n')",
  "(15350, Token.Text.Whitespace, '\\t\\t')",
  "(15352, Token.Comment.Single, '# verify that we are using clock_gettime rather than doing direct syscalls')",
  "(15426, Token.Text.NewLine, '\\n')",
  "(15427, Token.Text.Whitespace, '\\t\\t')",
  "(15429, Token.Comment.Single, '# so we dont break 32 bit arches due to time64.')",
  "(15476, Token.Text.NewLine, '\\n')",
  "(15477, Token.Text.Whitespace, '\\t\\t')",
  "(15479, Token.Text, 'nm')",
  "(15481, Token.Text.Whitespace, ' ')",
  "(15482, Token.Text, '-D')",
  "(15484, Token.Text.Whitespace, ' ')",
  "(15485, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(15494, Token.Text, '/usr/lib/libstdc++.so.*')",
  "(15517, Token.Text.Whitespace, ' ')",
  "(15518, Token.Text, '|')",
  "(15519, Token.Text.Whitespace, ' ')",
  "(15520, Token.Text, 'grep')",
  "(15524, Token.Text.Whitespace, ' ')",
  "(15525, Token.Text, 'clock_gettime')",
  "(15538, Token.Text.NewLine, '\\n')",
  "(15539, Token.Text.Whitespace, '\\t')",
  "(15540, Token.Text, 'fi')",
  "(15542, Token.Text.NewLine, '\\n\\n')",
  "(15544, Token.Text.Whitespace, '\\t')",
  "(15545, Token.Text, 'mkdir')",
  "(15550, Token.Text.Whitespace, ' ')",
  "(15551, Token.Text, '-p')",
  "(15553, Token.Text.Whitespace, ' ')",
  "(15554, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15566, Token.Text, '/usr/lib')",
  "(15574, Token.Text.NewLine, '\\n')",
  "(15575, Token.Text.Whitespace, '\\t')",
  "(15576, Token.Text, 'mv')",
  "(15578, Token.Text.Whitespace, ' ')",
  "(15579, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(15588, Token.Text, '/usr/${_target:+$CTARGET/}lib/libstdc++.so.*')",
  "(15632, Token.Text.Whitespace, ' ')",
  "(15633, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15645, Token.Text, '/usr/lib/')",
  "(15654, Token.Text.NewLine, '\\n')",
  "(15655, Token.Text, '}')",
  "(15656, Token.Text.NewLine, '\\n\\n')",
  "(15658, Token.Text, 'gpp()')",
  "(15663, Token.Text.Whitespace, ' ')",
  "(15664, Token.Text, '{')",
  "(15665, Token.Text.NewLine, '\\n')",
  "(15666, Token.Text.Whitespace, '\\t')",
  "(15667, Token.Text, 'pkgdesc=\"GNU')",
  "(15679, Token.Text.Whitespace, ' ')",
  "(15680, Token.Text, 'C++')",
  "(15683, Token.Text.Whitespace, ' ')",
  "(15684, Token.Text, 'standard')",
  "(15692, Token.Text.Whitespace, ' ')",
  "(15693, Token.Text, 'library')",
  "(15700, Token.Text.Whitespace, ' ')",
  "(15701, Token.Text, 'and')",
  "(15704, Token.Text.Whitespace, ' ')",
  "(15705, Token.Text, 'compiler\"')",
  "(15714, Token.Text.NewLine, '\\n')",
  "(15715, Token.Text.Whitespace, '\\t')",
  "(15716, Token.Text, 'depends=\"libstdc++=$_gccrel')",
  "(15743, Token.Text.Whitespace, ' ')",
  "(15744, Token.Text, 'gcc=$_gccrel')",
  "(15756, Token.Text.Whitespace, ' ')",
  "(15757, Token.Text, 'libc-dev\"')",
  "(15766, Token.Text.NewLine, '\\n')",
  "(15767, Token.Text.Whitespace, '\\t')",
  "(15768, Token.Text, 'mkdir')",
  "(15773, Token.Text.Whitespace, ' ')",
  "(15774, Token.Text, '-p')",
  "(15776, Token.Text.Whitespace, ' ')",
  "(15777, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec\"')",
  "(15802, Token.Text.Whitespace, ' ')",
  "(15803, Token.Text, '\\\\')",
  "(15804, Token.Text.NewLine, '\\n')",
  "(15805, Token.Text.Whitespace, '\\t\\t')",
  "(15807, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15819, Token.Text, '/usr/bin')",
  "(15827, Token.Text.Whitespace, ' ')",
  "(15828, Token.Text, '\\\\')",
  "(15829, Token.Text.NewLine, '\\n')",
  "(15830, Token.Text.Whitespace, '\\t\\t')",
  "(15832, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15844, Token.Text, '/usr/${_target:+$CTARGET/}include')",
  "(15877, Token.Text.Whitespace, ' ')",
  "(15878, Token.Text, '\\\\')",
  "(15879, Token.Text.NewLine, '\\n')",
  "(15880, Token.Text.Whitespace, '\\t\\t')",
  "(15882, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(15894, Token.Text, '/usr/${_target:+$CTARGET/}lib')",
  "(15923, Token.Text.Whitespace, ' ')",
  "(15924, Token.Text, '\\\\')",
  "(15925, Token.Text.NewLine, '\\n\\n')",
  "(15927, Token.Text.Whitespace, '\\t')",
  "(15928, Token.Text, 'mv')",
  "(15930, Token.Text.Whitespace, ' ')",
  "(15931, Token.Literal.String.Double, '\"$pkgdir/$_gcclibexec/cc1plus\"')",
  "(15961, Token.Text.Whitespace, ' ')",
  "(15962, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec/\"')",
  "(15988, Token.Text.NewLine, '\\n\\n')",
  "(15990, Token.Text.Whitespace, '\\t')",
  "(15991, Token.Text, 'mv')",
  "(15993, Token.Text.Whitespace, ' ')",
  "(15994, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16003, Token.Text, '/usr/${_target:+$CTARGET/}lib/*++*')",
  "(16037, Token.Text.Whitespace, ' ')",
  "(16038, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16050, Token.Text, '/usr/${_target:+$CTARGET/}lib/')",
  "(16080, Token.Text.NewLine, '\\n')",
  "(16081, Token.Text.Whitespace, '\\t')",
  "(16082, Token.Text, 'mv')",
  "(16084, Token.Text.Whitespace, ' ')",
  "(16085, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16094, Token.Text, '/usr/${_target:+$CTARGET/}include/c++')",
  "(16131, Token.Text.Whitespace, ' ')",
  "(16132, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16144, Token.Text, '/usr/${_target:+$CTARGET/}include/')",
  "(16178, Token.Text.NewLine, '\\n')",
  "(16179, Token.Text.Whitespace, '\\t')",
  "(16180, Token.Text, 'mv')",
  "(16182, Token.Text.Whitespace, ' ')",
  "(16183, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16192, Token.Text, '/usr/bin/*++')",
  "(16204, Token.Text.Whitespace, ' ')",
  "(16205, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16217, Token.Text, '/usr/bin/')",
  "(16226, Token.Text.NewLine, '\\n')",
  "(16227, Token.Text, '}')",
  "(16228, Token.Text.NewLine, '\\n\\n')",
  "(16230, Token.Text, 'libobjc()')",
  "(16239, Token.Text.Whitespace, ' ')",
  "(16240, Token.Text, '{')",
  "(16241, Token.Text.NewLine, '\\n')",
  "(16242, Token.Text.Whitespace, '\\t')",
  "(16243, Token.Text, 'pkgdesc=\"GNU')",
  "(16255, Token.Text.Whitespace, ' ')",
  "(16256, Token.Text, 'Objective-C')",
  "(16267, Token.Text.Whitespace, ' ')",
  "(16268, Token.Text, 'runtime\"')",
  "(16276, Token.Text.NewLine, '\\n')",
  "(16277, Token.Text.Whitespace, '\\t')",
  "(16278, Token.Text, 'replaces=\"objc\"')",
  "(16293, Token.Text.NewLine, '\\n')",
  "(16294, Token.Text.Whitespace, '\\t')",
  "(16295, Token.Text, 'depends=')",
  "(16303, Token.Text.NewLine, '\\n')",
  "(16304, Token.Text.Whitespace, '\\t')",
  "(16305, Token.Text, 'mkdir')",
  "(16310, Token.Text.Whitespace, ' ')",
  "(16311, Token.Text, '-p')",
  "(16313, Token.Text.Whitespace, ' ')",
  "(16314, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16326, Token.Text, '/usr/lib')",
  "(16334, Token.Text.NewLine, '\\n')",
  "(16335, Token.Text.Whitespace, '\\t')",
  "(16336, Token.Text, 'mv')",
  "(16338, Token.Text.Whitespace, ' ')",
  "(16339, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16348, Token.Text, '/usr/${_target:+$CTARGET/}lib/libobjc.so.*')",
  "(16390, Token.Text.Whitespace, ' ')",
  "(16391, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16403, Token.Text, '/usr/lib/')",
  "(16412, Token.Text.NewLine, '\\n')",
  "(16413, Token.Text, '}')",
  "(16414, Token.Text.NewLine, '\\n\\n')",
  "(16416, Token.Text, 'objc()')",
  "(16422, Token.Text.Whitespace, ' ')",
  "(16423, Token.Text, '{')",
  "(16424, Token.Text.NewLine, '\\n')",
  "(16425, Token.Text.Whitespace, '\\t')",
  "(16426, Token.Text, 'pkgdesc=\"GNU')",
  "(16438, Token.Text.Whitespace, ' ')",
  "(16439, Token.Text, 'Objective-C\"')",
  "(16451, Token.Text.NewLine, '\\n')",
  "(16452, Token.Text.Whitespace, '\\t')",
  "(16453, Token.Text, 'replaces=\"gcc\"')",
  "(16467, Token.Text.NewLine, '\\n')",
  "(16468, Token.Text.Whitespace, '\\t')",
  "(16469, Token.Text, 'depends=\"libc-dev')",
  "(16486, Token.Text.Whitespace, ' ')",
  "(16487, Token.Text, 'gcc=$_gccrel')",
  "(16499, Token.Text.Whitespace, ' ')",
  "(16500, Token.Text, 'libobjc=$_gccrel\"')",
  "(16517, Token.Text.NewLine, '\\n\\n')",
  "(16519, Token.Text.Whitespace, '\\t')",
  "(16520, Token.Text, 'mkdir')",
  "(16525, Token.Text.Whitespace, ' ')",
  "(16526, Token.Text, '-p')",
  "(16528, Token.Text.Whitespace, ' ')",
  "(16529, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec\"')",
  "(16554, Token.Text.Whitespace, ' ')",
  "(16555, Token.Text, '\\\\')",
  "(16556, Token.Text.NewLine, '\\n')",
  "(16557, Token.Text.Whitespace, '\\t\\t')",
  "(16559, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16571, Token.Text, '/$_gcclibdir/include')",
  "(16591, Token.Text.Whitespace, ' ')",
  "(16592, Token.Text, '\\\\')",
  "(16593, Token.Text.NewLine, '\\n')",
  "(16594, Token.Text.Whitespace, '\\t\\t')",
  "(16596, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16608, Token.Text, '/usr/lib')",
  "(16616, Token.Text.NewLine, '\\n')",
  "(16617, Token.Text.Whitespace, '\\t')",
  "(16618, Token.Text, 'mv')",
  "(16620, Token.Text.Whitespace, ' ')",
  "(16621, Token.Literal.String.Double, '\"$pkgdir/$_gcclibexec/cc1obj\"')",
  "(16650, Token.Text.Whitespace, ' ')",
  "(16651, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec/\"')",
  "(16677, Token.Text.NewLine, '\\n')",
  "(16678, Token.Text.Whitespace, '\\t')",
  "(16679, Token.Text, 'mv')",
  "(16681, Token.Text.Whitespace, ' ')",
  "(16682, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16691, Token.Text, '/$_gcclibdir/include/objc')",
  "(16716, Token.Text.Whitespace, ' ')",
  "(16717, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16729, Token.Text, '/$_gcclibdir/include/')",
  "(16750, Token.Text.NewLine, '\\n')",
  "(16751, Token.Text.Whitespace, '\\t')",
  "(16752, Token.Text, 'mv')",
  "(16754, Token.Text.Whitespace, ' ')",
  "(16755, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16764, Token.Text, '/usr/lib/libobjc.so')",
  "(16783, Token.Text.Whitespace, ' ')",
  "(16784, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16793, Token.Text, '/usr/lib/libobjc.a')",
  "(16811, Token.Text.Whitespace, ' ')",
  "(16812, Token.Text, '\\\\')",
  "(16813, Token.Text.NewLine, '\\n')",
  "(16814, Token.Text.Whitespace, '\\t\\t')",
  "(16816, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16828, Token.Text, '/usr/lib/')",
  "(16837, Token.Text.NewLine, '\\n')",
  "(16838, Token.Text, '}')",
  "(16839, Token.Text.NewLine, '\\n\\n')",
  "(16841, Token.Text, 'libgcc()')",
  "(16849, Token.Text.Whitespace, ' ')",
  "(16850, Token.Text, '{')",
  "(16851, Token.Text.NewLine, '\\n')",
  "(16852, Token.Text.Whitespace, '\\t')",
  "(16853, Token.Text, 'pkgdesc=\"GNU')",
  "(16865, Token.Text.Whitespace, ' ')",
  "(16866, Token.Text, 'C')",
  "(16867, Token.Text.Whitespace, ' ')",
  "(16868, Token.Text, 'compiler')",
  "(16876, Token.Text.Whitespace, ' ')",
  "(16877, Token.Text, 'runtime')",
  "(16884, Token.Text.Whitespace, ' ')",
  "(16885, Token.Text, 'libraries\"')",
  "(16895, Token.Text.NewLine, '\\n')",
  "(16896, Token.Text.Whitespace, '\\t')",
  "(16897, Token.Text, 'depends=')",
  "(16905, Token.Text.NewLine, '\\n\\n')",
  "(16907, Token.Text.Whitespace, '\\t')",
  "(16908, Token.Text, 'mkdir')",
  "(16913, Token.Text.Whitespace, ' ')",
  "(16914, Token.Text, '-p')",
  "(16916, Token.Text.Whitespace, ' ')",
  "(16917, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(16929, Token.Text, '/usr/lib')",
  "(16937, Token.Text.NewLine, '\\n')",
  "(16938, Token.Text.Whitespace, '\\t')",
  "(16939, Token.Text, 'mv')",
  "(16941, Token.Text.Whitespace, ' ')",
  "(16942, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(16951, Token.Text, '/usr/${_target:+$CTARGET/}lib/libgcc_s.so.*')",
  "(16994, Token.Text.Whitespace, ' ')",
  "(16995, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17007, Token.Text, '/usr/lib/')",
  "(17016, Token.Text.NewLine, '\\n')",
  "(17017, Token.Text, '}')",
  "(17018, Token.Text.NewLine, '\\n\\n')",
  "(17020, Token.Text, 'libgomp()')",
  "(17029, Token.Text.Whitespace, ' ')",
  "(17030, Token.Text, '{')",
  "(17031, Token.Text.NewLine, '\\n')",
  "(17032, Token.Text.Whitespace, '\\t')",
  "(17033, Token.Text, 'pkgdesc=\"GCC')",
  "(17045, Token.Text.Whitespace, ' ')",
  "(17046, Token.Text, 'shared-memory')",
  "(17059, Token.Text.Whitespace, ' ')",
  "(17060, Token.Text, 'parallel')",
  "(17068, Token.Text.Whitespace, ' ')",
  "(17069, Token.Text, 'programming')",
  "(17080, Token.Text.Whitespace, ' ')",
  "(17081, Token.Text, 'API')",
  "(17084, Token.Text.Whitespace, ' ')",
  "(17085, Token.Text, 'library\"')",
  "(17093, Token.Text.NewLine, '\\n')",
  "(17094, Token.Text.Whitespace, '\\t')",
  "(17095, Token.Text, 'depends=')",
  "(17103, Token.Text.NewLine, '\\n')",
  "(17104, Token.Text.Whitespace, '\\t')",
  "(17105, Token.Text, 'replaces=\"gcc\"')",
  "(17119, Token.Text.NewLine, '\\n\\n')",
  "(17121, Token.Text.Whitespace, '\\t')",
  "(17122, Token.Text, 'mkdir')",
  "(17127, Token.Text.Whitespace, ' ')",
  "(17128, Token.Text, '-p')",
  "(17130, Token.Text.Whitespace, ' ')",
  "(17131, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17143, Token.Text, '/usr/lib')",
  "(17151, Token.Text.NewLine, '\\n')",
  "(17152, Token.Text.Whitespace, '\\t')",
  "(17153, Token.Text, 'mv')",
  "(17155, Token.Text.Whitespace, ' ')",
  "(17156, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(17165, Token.Text, '/usr/${_target:+$CTARGET/}lib/libgomp.so.*')",
  "(17207, Token.Text.Whitespace, ' ')",
  "(17208, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17220, Token.Text, '/usr/lib/')",
  "(17229, Token.Text.NewLine, '\\n')",
  "(17230, Token.Text, '}')",
  "(17231, Token.Text.NewLine, '\\n\\n')",
  "(17233, Token.Text, 'libgphobos()')",
  "(17245, Token.Text.Whitespace, ' ')",
  "(17246, Token.Text, '{')",
  "(17247, Token.Text.NewLine, '\\n')",
  "(17248, Token.Text.Whitespace, '\\t')",
  "(17249, Token.Text, 'pkgdesc=\"D')",
  "(17259, Token.Text.Whitespace, ' ')",
  "(17260, Token.Text, 'programming')",
  "(17271, Token.Text.Whitespace, ' ')",
  "(17272, Token.Text, 'language')",
  "(17280, Token.Text.Whitespace, ' ')",
  "(17281, Token.Text, 'standard')",
  "(17289, Token.Text.Whitespace, ' ')",
  "(17290, Token.Text, 'library')",
  "(17297, Token.Text.Whitespace, ' ')",
  "(17298, Token.Text, 'for')",
  "(17301, Token.Text.Whitespace, ' ')",
  "(17302, Token.Text, 'GCC\"')",
  "(17306, Token.Text.NewLine, '\\n')",
  "(17307, Token.Text.Whitespace, '\\t')",
  "(17308, Token.Text, 'depends=')",
  "(17316, Token.Text.NewLine, '\\n\\n')",
  "(17318, Token.Text.Whitespace, '\\t')",
  "(17319, Token.Text, 'mkdir')",
  "(17324, Token.Text.Whitespace, ' ')",
  "(17325, Token.Text, '-p')",
  "(17327, Token.Text.Whitespace, ' ')",
  "(17328, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17340, Token.Text, '/usr/lib')",
  "(17348, Token.Text.NewLine, '\\n')",
  "(17349, Token.Text.Whitespace, '\\t')",
  "(17350, Token.Text, 'mv')",
  "(17352, Token.Text.Whitespace, ' ')",
  "(17353, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(17362, Token.Text, '/usr/lib/libgdruntime.so.*')",
  "(17388, Token.Text.Whitespace, ' ')",
  "(17389, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17401, Token.Text, '/usr/lib/')",
  "(17410, Token.Text.NewLine, '\\n')",
  "(17411, Token.Text.Whitespace, '\\t')",
  "(17412, Token.Text, 'mv')",
  "(17414, Token.Text.Whitespace, ' ')",
  "(17415, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(17424, Token.Text, '/usr/lib/libgphobos.so.*')",
  "(17448, Token.Text.Whitespace, '  ')",
  "(17450, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17462, Token.Text, '/usr/lib/')",
  "(17471, Token.Text.NewLine, '\\n')",
  "(17472, Token.Text, '}')",
  "(17473, Token.Text.NewLine, '\\n\\n')",
  "(17475, Token.Text, 'gdc()')",
  "(17480, Token.Text.Whitespace, ' ')",
  "(17481, Token.Text, '{')",
  "(17482, Token.Text.NewLine, '\\n')",
  "(17483, Token.Text.Whitespace, '\\t')",
  "(17484, Token.Text, 'pkgdesc=\"GCC-based')",
  "(17502, Token.Text.Whitespace, ' ')",
  "(17503, Token.Text, 'D')",
  "(17504, Token.Text.Whitespace, ' ')",
  "(17505, Token.Text, 'language')",
  "(17513, Token.Text.Whitespace, ' ')",
  "(17514, Token.Text, 'compiler\"')",
  "(17523, Token.Text.NewLine, '\\n')",
  "(17524, Token.Text.Whitespace, '\\t')",
  "(17525, Token.Text, 'depends=\"gcc=$_gccrel')",
  "(17546, Token.Text.Whitespace, ' ')",
  "(17547, Token.Text, 'libgphobos=$_gccrel')",
  "(17566, Token.Text.Whitespace, ' ')",
  "(17567, Token.Text, 'musl-dev\"')",
  "(17576, Token.Text.NewLine, '\\n')",
  "(17577, Token.Text.Whitespace, '\\t')",
  "(17578, Token.Text, 'depends=\"$depends')",
  "(17595, Token.Text.Whitespace, ' ')",
  "(17596, Token.Text, 'libucontext-dev\"')",
  "(17612, Token.Text.NewLine, '\\n\\n')",
  "(17614, Token.Text.Whitespace, '\\t')",
  "(17615, Token.Text, 'mkdir')",
  "(17620, Token.Text.Whitespace, ' ')",
  "(17621, Token.Text, '-p')",
  "(17623, Token.Text.Whitespace, ' ')",
  "(17624, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec\"')",
  "(17649, Token.Text.Whitespace, ' ')",
  "(17650, Token.Text, '\\\\')",
  "(17651, Token.Text.NewLine, '\\n')",
  "(17652, Token.Text.Whitespace, '\\t\\t')",
  "(17654, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17666, Token.Text, '/$_gcclibdir/include/d/')",
  "(17689, Token.Text.Whitespace, ' ')",
  "(17690, Token.Text, '\\\\')",
  "(17691, Token.Text.NewLine, '\\n')",
  "(17692, Token.Text.Whitespace, '\\t\\t')",
  "(17694, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17706, Token.Text, '/usr/lib')",
  "(17714, Token.Text.Whitespace, ' ')",
  "(17715, Token.Text, '\\\\')",
  "(17716, Token.Text.NewLine, '\\n')",
  "(17717, Token.Text.Whitespace, '\\t\\t')",
  "(17719, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(17731, Token.Text, '/usr/bin')",
  "(17739, Token.Text.NewLine, '\\n')",
  "(17740, Token.Text.Whitespace, '\\t')",
  "(17741, Token.Comment.Single, \"# Copy: The installed '.d' files, the static lib, the binary itself\")",
  "(17808, Token.Text.NewLine, '\\n')",
  "(17809, Token.Text.Whitespace, '\\t')",
  "(17810, Token.Comment.Single, \"# The shared libs are part of 'libgphobos' so one can run program\")",
  "(17875, Token.Text.NewLine, '\\n')",
  "(17876, Token.Text.Whitespace, '\\t')",
  "(17877, Token.Comment.Single, '# without installing the compiler')",
  "(17910, Token.Text.NewLine, '\\n')",
  "(17911, Token.Text.Whitespace, '\\t')",
  "(17912, Token.Text, 'mv')",
  "(17914, Token.Text.Whitespace, ' ')",
  "(17915, Token.Literal.String.Double, '\"$pkgdir/$_gcclibexec/d21\"')",
  "(17941, Token.Text.Whitespace, ' ')",
  "(17942, Token.Literal.String.Double, '\"$subpkgdir/$_gcclibexec/\"')",
  "(17968, Token.Text.NewLine, '\\n')",
  "(17969, Token.Text.Whitespace, '\\t')",
  "(17970, Token.Text, 'mv')",
  "(17972, Token.Text.Whitespace, ' ')",
  "(17973, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(17982, Token.Text, '/$_gcclibdir/include/d/*')",
  "(18006, Token.Text.Whitespace, ' ')",
  "(18007, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18019, Token.Text, '/$_gcclibdir/include/d/')",
  "(18042, Token.Text.NewLine, '\\n')",
  "(18043, Token.Text.Whitespace, '\\t')",
  "(18044, Token.Text, 'mv')",
  "(18046, Token.Text.Whitespace, ' ')",
  "(18047, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18056, Token.Text, '/usr/lib/libgdruntime.a')",
  "(18079, Token.Text.Whitespace, ' ')",
  "(18080, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18092, Token.Text, '/usr/lib/')",
  "(18101, Token.Text.NewLine, '\\n')",
  "(18102, Token.Text.Whitespace, '\\t')",
  "(18103, Token.Text, 'mv')",
  "(18105, Token.Text.Whitespace, ' ')",
  "(18106, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18115, Token.Text, '/usr/lib/libgphobos.a')",
  "(18136, Token.Text.Whitespace, ' ')",
  "(18137, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18149, Token.Text, '/usr/lib/')",
  "(18158, Token.Text.NewLine, '\\n')",
  "(18159, Token.Text.Whitespace, '\\t')",
  "(18160, Token.Text, 'mv')",
  "(18162, Token.Text.Whitespace, ' ')",
  "(18163, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18172, Token.Text, '/usr/lib/libgphobos.spec')",
  "(18196, Token.Text.Whitespace, ' ')",
  "(18197, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18209, Token.Text, '/usr/lib/')",
  "(18218, Token.Text.NewLine, '\\n')",
  "(18219, Token.Text.Whitespace, '\\t')",
  "(18220, Token.Text, 'mv')",
  "(18222, Token.Text.Whitespace, ' ')",
  "(18223, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18232, Token.Text, '/usr/bin/$CTARGET-gdc')",
  "(18253, Token.Text.Whitespace, ' ')",
  "(18254, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18266, Token.Text, '/usr/bin/')",
  "(18275, Token.Text.NewLine, '\\n')",
  "(18276, Token.Text.Whitespace, '\\t')",
  "(18277, Token.Text, 'mv')",
  "(18279, Token.Text.Whitespace, ' ')",
  "(18280, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18289, Token.Text, '/usr/bin/gdc')",
  "(18301, Token.Text.Whitespace, ' ')",
  "(18302, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18314, Token.Text, '/usr/bin/')",
  "(18323, Token.Text.NewLine, '\\n')",
  "(18324, Token.Text, '}')",
  "(18325, Token.Text.NewLine, '\\n\\n\\n')",
  "(18328, Token.Text, 'libgo()')",
  "(18335, Token.Text.Whitespace, ' ')",
  "(18336, Token.Text, '{')",
  "(18337, Token.Text.NewLine, '\\n')",
  "(18338, Token.Text.Whitespace, '\\t')",
  "(18339, Token.Text, 'pkgdesc=\"Go')",
  "(18350, Token.Text.Whitespace, ' ')",
  "(18351, Token.Text, 'runtime')",
  "(18358, Token.Text.Whitespace, ' ')",
  "(18359, Token.Text, 'library')",
  "(18366, Token.Text.Whitespace, ' ')",
  "(18367, Token.Text, 'for')",
  "(18370, Token.Text.Whitespace, ' ')",
  "(18371, Token.Text, 'GCC\"')",
  "(18375, Token.Text.NewLine, '\\n')",
  "(18376, Token.Text.Whitespace, '\\t')",
  "(18377, Token.Text, 'depends=')",
  "(18385, Token.Text.NewLine, '\\n\\n')",
  "(18387, Token.Text.Whitespace, '\\t')",
  "(18388, Token.Text, 'mkdir')",
  "(18393, Token.Text.Whitespace, ' ')",
  "(18394, Token.Text, '-p')",
  "(18396, Token.Text.Whitespace, ' ')",
  "(18397, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18409, Token.Text, '/usr/lib')",
  "(18417, Token.Text.NewLine, '\\n')",
  "(18418, Token.Text.Whitespace, '\\t')",
  "(18419, Token.Text, 'mv')",
  "(18421, Token.Text.Whitespace, ' ')",
  "(18422, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18431, Token.Text, '/usr/lib/libgo.so.*')",
  "(18450, Token.Text.Whitespace, ' ')",
  "(18451, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18463, Token.Text, '/usr/lib/')",
  "(18472, Token.Text.NewLine, '\\n')",
  "(18473, Token.Text, '}')",
  "(18474, Token.Text.NewLine, '\\n\\n')",
  "(18476, Token.Text, 'go()')",
  "(18480, Token.Text.Whitespace, ' ')",
  "(18481, Token.Text, '{')",
  "(18482, Token.Text.NewLine, '\\n')",
  "(18483, Token.Text.Whitespace, '\\t')",
  "(18484, Token.Text, 'pkgdesc=\"Go')",
  "(18495, Token.Text.Whitespace, ' ')",
  "(18496, Token.Text, 'support')",
  "(18503, Token.Text.Whitespace, ' ')",
  "(18504, Token.Text, 'for')",
  "(18507, Token.Text.Whitespace, ' ')",
  "(18508, Token.Text, 'GCC\"')",
  "(18512, Token.Text.NewLine, '\\n')",
  "(18513, Token.Text.Whitespace, '\\t')",
  "(18514, Token.Text, 'depends=\"gcc=$_gccrel')",
  "(18535, Token.Text.Whitespace, ' ')",
  "(18536, Token.Text, 'libgo=$_gccrel')",
  "(18550, Token.Text.Whitespace, ' ')",
  "(18551, Token.Text, '!go\"')",
  "(18555, Token.Text.NewLine, '\\n\\n')",
  "(18557, Token.Text.Whitespace, '\\t')",
  "(18558, Token.Text, 'mkdir')",
  "(18563, Token.Text.Whitespace, ' ')",
  "(18564, Token.Text, '-p')",
  "(18566, Token.Text.Whitespace, ' ')",
  "(18567, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18579, Token.Text, '/$_gcclibexec')",
  "(18592, Token.Text.Whitespace, ' ')",
  "(18593, Token.Text, '\\\\')",
  "(18594, Token.Text.NewLine, '\\n')",
  "(18595, Token.Text.Whitespace, '\\t\\t')",
  "(18597, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18609, Token.Text, '/usr/lib')",
  "(18617, Token.Text.Whitespace, ' ')",
  "(18618, Token.Text, '\\\\')",
  "(18619, Token.Text.NewLine, '\\n')",
  "(18620, Token.Text.Whitespace, '\\t\\t')",
  "(18622, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18634, Token.Text, '/usr/bin')",
  "(18642, Token.Text.NewLine, '\\n')",
  "(18643, Token.Text.Whitespace, '\\t')",
  "(18644, Token.Text, 'mv')",
  "(18646, Token.Text.Whitespace, ' ')",
  "(18647, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18656, Token.Text, '/usr/lib/go')",
  "(18667, Token.Text.Whitespace, ' ')",
  "(18668, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18680, Token.Text, '/usr/lib/')",
  "(18689, Token.Text.NewLine, '\\n')",
  "(18690, Token.Text.Whitespace, '\\t')",
  "(18691, Token.Text, 'mv')",
  "(18693, Token.Text.Whitespace, ' ')",
  "(18694, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18703, Token.Text, '/usr/bin/*gccgo')",
  "(18718, Token.Text.Whitespace, ' ')",
  "(18719, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18731, Token.Text, '/usr/bin/')",
  "(18740, Token.Text.NewLine, '\\n')",
  "(18741, Token.Text.Whitespace, '\\t')",
  "(18742, Token.Text, 'mv')",
  "(18744, Token.Text.Whitespace, ' ')",
  "(18745, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18754, Token.Text, '/usr/bin/*go')",
  "(18766, Token.Text.Whitespace, ' ')",
  "(18767, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18779, Token.Text, '/usr/bin')",
  "(18787, Token.Text.NewLine, '\\n')",
  "(18788, Token.Text.Whitespace, '\\t')",
  "(18789, Token.Text, 'mv')",
  "(18791, Token.Text.Whitespace, ' ')",
  "(18792, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18801, Token.Text, '/usr/bin/*gofmt')",
  "(18816, Token.Text.Whitespace, ' ')",
  "(18817, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18829, Token.Text, '/usr/bin')",
  "(18837, Token.Text.NewLine, '\\n')",
  "(18838, Token.Text.Whitespace, '\\t')",
  "(18839, Token.Text, 'mv')",
  "(18841, Token.Text.Whitespace, ' ')",
  "(18842, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18851, Token.Text, '/$_gcclibexec/go1')",
  "(18868, Token.Text.Whitespace, ' ')",
  "(18869, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18881, Token.Text, '/$_gcclibexec/')",
  "(18895, Token.Text.NewLine, '\\n')",
  "(18896, Token.Text.Whitespace, '\\t')",
  "(18897, Token.Text, 'mv')",
  "(18899, Token.Text.Whitespace, ' ')",
  "(18900, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18909, Token.Text, '/$_gcclibexec/cgo')",
  "(18926, Token.Text.Whitespace, ' ')",
  "(18927, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(18939, Token.Text, '/$_gcclibexec/')",
  "(18953, Token.Text.NewLine, '\\n')",
  "(18954, Token.Text.Whitespace, '\\t')",
  "(18955, Token.Text, 'mv')",
  "(18957, Token.Text.Whitespace, ' ')",
  "(18958, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(18967, Token.Text, '/$_gcclibexec/buildid')",
  "(18988, Token.Text.Whitespace, ' ')",
  "(18989, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19001, Token.Text, '/$_gcclibexec/')",
  "(19015, Token.Text.NewLine, '\\n')",
  "(19016, Token.Text.Whitespace, '\\t')",
  "(19017, Token.Text, 'mv')",
  "(19019, Token.Text.Whitespace, ' ')",
  "(19020, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19029, Token.Text, '/$_gcclibexec/test2json')",
  "(19052, Token.Text.Whitespace, ' ')",
  "(19053, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19065, Token.Text, '/$_gcclibexec/')",
  "(19079, Token.Text.NewLine, '\\n')",
  "(19080, Token.Text.Whitespace, '\\t')",
  "(19081, Token.Text, 'mv')",
  "(19083, Token.Text.Whitespace, ' ')",
  "(19084, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19093, Token.Text, '/$_gcclibexec/vet')",
  "(19110, Token.Text.Whitespace, ' ')",
  "(19111, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19123, Token.Text, '/$_gcclibexec/')",
  "(19137, Token.Text.NewLine, '\\n')",
  "(19138, Token.Text.Whitespace, '\\t')",
  "(19139, Token.Text, 'mv')",
  "(19141, Token.Text.Whitespace, ' ')",
  "(19142, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19151, Token.Text, '/usr/lib/libgo.a')",
  "(19167, Token.Text.Whitespace, ' ')",
  "(19168, Token.Text, '\\\\')",
  "(19169, Token.Text.NewLine, '\\n')",
  "(19170, Token.Text.Whitespace, '\\t\\t')",
  "(19172, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19181, Token.Text, '/usr/lib/libgo.so')",
  "(19198, Token.Text.Whitespace, ' ')",
  "(19199, Token.Text, '\\\\')",
  "(19200, Token.Text.NewLine, '\\n')",
  "(19201, Token.Text.Whitespace, '\\t\\t')",
  "(19203, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19212, Token.Text, '/usr/lib/libgobegin.a')",
  "(19233, Token.Text.Whitespace, ' ')",
  "(19234, Token.Text, '\\\\')",
  "(19235, Token.Text.NewLine, '\\n')",
  "(19236, Token.Text.Whitespace, '\\t\\t')",
  "(19238, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19247, Token.Text, '/usr/lib/libgolibbegin.a')",
  "(19271, Token.Text.Whitespace, ' ')",
  "(19272, Token.Text, '\\\\')",
  "(19273, Token.Text.NewLine, '\\n')",
  "(19274, Token.Text.Whitespace, '\\t\\t')",
  "(19276, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19288, Token.Text, '/usr/lib/')",
  "(19297, Token.Text.NewLine, '\\n')",
  "(19298, Token.Text, '}')",
  "(19299, Token.Text.NewLine, '\\n\\n')",
  "(19301, Token.Text, 'libgfortran()')",
  "(19314, Token.Text.Whitespace, ' ')",
  "(19315, Token.Text, '{')",
  "(19316, Token.Text.NewLine, '\\n')",
  "(19317, Token.Text.Whitespace, '\\t')",
  "(19318, Token.Text, 'pkgdesc=\"Fortran')",
  "(19334, Token.Text.Whitespace, ' ')",
  "(19335, Token.Text, 'runtime')",
  "(19342, Token.Text.Whitespace, ' ')",
  "(19343, Token.Text, 'library')",
  "(19350, Token.Text.Whitespace, ' ')",
  "(19351, Token.Text, 'for')",
  "(19354, Token.Text.Whitespace, ' ')",
  "(19355, Token.Text, 'GCC\"')",
  "(19359, Token.Text.NewLine, '\\n')",
  "(19360, Token.Text.Whitespace, '\\t')",
  "(19361, Token.Text, 'depends=')",
  "(19369, Token.Text.NewLine, '\\n\\n')",
  "(19371, Token.Text.Whitespace, '\\t')",
  "(19372, Token.Text, 'mkdir')",
  "(19377, Token.Text.Whitespace, ' ')",
  "(19378, Token.Text, '-p')",
  "(19380, Token.Text.Whitespace, ' ')",
  "(19381, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19393, Token.Text, '/usr/lib')",
  "(19401, Token.Text.NewLine, '\\n')",
  "(19402, Token.Text.Whitespace, '\\t')",
  "(19403, Token.Text, 'mv')",
  "(19405, Token.Text.Whitespace, ' ')",
  "(19406, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19415, Token.Text, '/usr/lib/libgfortran.so.*')",
  "(19440, Token.Text.Whitespace, ' ')",
  "(19441, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19453, Token.Text, '/usr/lib/')",
  "(19462, Token.Text.NewLine, '\\n')",
  "(19463, Token.Text, '}')",
  "(19464, Token.Text.NewLine, '\\n\\n')",
  "(19466, Token.Text, 'libquadmath()')",
  "(19479, Token.Text.Whitespace, ' ')",
  "(19480, Token.Text, '{')",
  "(19481, Token.Text.NewLine, '\\n')",
  "(19482, Token.Text.Whitespace, '\\t')",
  "(19483, Token.Text, 'replaces=\"gcc\"')",
  "(19497, Token.Text.NewLine, '\\n')",
  "(19498, Token.Text.Whitespace, '\\t')",
  "(19499, Token.Text, 'pkgdesc=\"128-bit')",
  "(19515, Token.Text.Whitespace, ' ')",
  "(19516, Token.Text, 'math')",
  "(19520, Token.Text.Whitespace, ' ')",
  "(19521, Token.Text, 'library')",
  "(19528, Token.Text.Whitespace, ' ')",
  "(19529, Token.Text, 'for')",
  "(19532, Token.Text.Whitespace, ' ')",
  "(19533, Token.Text, 'GCC\"')",
  "(19537, Token.Text.NewLine, '\\n')",
  "(19538, Token.Text.Whitespace, '\\t')",
  "(19539, Token.Text, 'depends=')",
  "(19547, Token.Text.NewLine, '\\n\\n')",
  "(19549, Token.Text.Whitespace, '\\t')",
  "(19550, Token.Text, 'mkdir')",
  "(19555, Token.Text.Whitespace, ' ')",
  "(19556, Token.Text, '-p')",
  "(19558, Token.Text.Whitespace, ' ')",
  "(19559, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19571, Token.Text, '/usr/lib')",
  "(19579, Token.Text.NewLine, '\\n')",
  "(19580, Token.Text.Whitespace, '\\t')",
  "(19581, Token.Text, 'mv')",
  "(19583, Token.Text.Whitespace, ' ')",
  "(19584, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19593, Token.Text, '/usr/lib/libquadmath.so.*')",
  "(19618, Token.Text.Whitespace, ' ')",
  "(19619, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19631, Token.Text, '/usr/lib/')",
  "(19640, Token.Text.NewLine, '\\n')",
  "(19641, Token.Text, '}')",
  "(19642, Token.Text.NewLine, '\\n\\n')",
  "(19644, Token.Text, 'gfortran()')",
  "(19654, Token.Text.Whitespace, ' ')",
  "(19655, Token.Text, '{')",
  "(19656, Token.Text.NewLine, '\\n')",
  "(19657, Token.Text.Whitespace, '\\t')",
  "(19658, Token.Text, 'pkgdesc=\"GNU')",
  "(19670, Token.Text.Whitespace, ' ')",
  "(19671, Token.Text, 'Fortran')",
  "(19678, Token.Text.Whitespace, ' ')",
  "(19679, Token.Text, 'Compiler\"')",
  "(19688, Token.Text.NewLine, '\\n')",
  "(19689, Token.Text.Whitespace, '\\t')",
  "(19690, Token.Text, 'depends=\"gcc=$_gccrel')",
  "(19711, Token.Text.Whitespace, ' ')",
  "(19712, Token.Text, 'libgfortran=$_gccrel\"')",
  "(19733, Token.Text.NewLine, '\\n')",
  "(19734, Token.Text.Whitespace, '\\t')",
  "(19735, Token.Text, '$_libquadmath')",
  "(19748, Token.Text.Whitespace, ' ')",
  "(19749, Token.Text, '&&')",
  "(19751, Token.Text.Whitespace, ' ')",
  "(19752, Token.Text, 'depends=\"$depends')",
  "(19769, Token.Text.Whitespace, ' ')",
  "(19770, Token.Text, 'libquadmath=$_gccrel\"')",
  "(19791, Token.Text.NewLine, '\\n')",
  "(19792, Token.Text.Whitespace, '\\t')",
  "(19793, Token.Text, 'replaces=\"gcc\"')",
  "(19807, Token.Text.NewLine, '\\n\\n')",
  "(19809, Token.Text.Whitespace, '\\t')",
  "(19810, Token.Text, 'mkdir')",
  "(19815, Token.Text.Whitespace, ' ')",
  "(19816, Token.Text, '-p')",
  "(19818, Token.Text.Whitespace, ' ')",
  "(19819, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19831, Token.Text, '/$_gcclibexec')",
  "(19844, Token.Text.Whitespace, ' ')",
  "(19845, Token.Text, '\\\\')",
  "(19846, Token.Text.NewLine, '\\n')",
  "(19847, Token.Text.Whitespace, '\\t\\t')",
  "(19849, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19861, Token.Text, '/$_gcclibdir')",
  "(19873, Token.Text.Whitespace, ' ')",
  "(19874, Token.Text, '\\\\')",
  "(19875, Token.Text.NewLine, '\\n')",
  "(19876, Token.Text.Whitespace, '\\t\\t')",
  "(19878, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19890, Token.Text, '/usr/lib')",
  "(19898, Token.Text.Whitespace, ' ')",
  "(19899, Token.Text, '\\\\')",
  "(19900, Token.Text.NewLine, '\\n')",
  "(19901, Token.Text.Whitespace, '\\t\\t')",
  "(19903, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19915, Token.Text, '/usr/bin')",
  "(19923, Token.Text.NewLine, '\\n')",
  "(19924, Token.Text.Whitespace, '\\t')",
  "(19925, Token.Text, 'mv')",
  "(19927, Token.Text.Whitespace, ' ')",
  "(19928, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19937, Token.Text, '/usr/bin/*gfortran')",
  "(19955, Token.Text.Whitespace, ' ')",
  "(19956, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(19968, Token.Text, '/usr/bin/')",
  "(19977, Token.Text.NewLine, '\\n')",
  "(19978, Token.Text.Whitespace, '\\t')",
  "(19979, Token.Text, 'mv')",
  "(19981, Token.Text.Whitespace, ' ')",
  "(19982, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(19991, Token.Text, '/usr/lib/libgfortran.a')",
  "(20013, Token.Text.Whitespace, ' ')",
  "(20014, Token.Text, '\\\\')",
  "(20015, Token.Text.NewLine, '\\n')",
  "(20016, Token.Text.Whitespace, '\\t\\t')",
  "(20018, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20027, Token.Text, '/usr/lib/libgfortran.so')",
  "(20050, Token.Text.Whitespace, ' ')",
  "(20051, Token.Text, '\\\\')",
  "(20052, Token.Text.NewLine, '\\n')",
  "(20053, Token.Text.Whitespace, '\\t\\t')",
  "(20055, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20067, Token.Text, '/usr/lib/')",
  "(20076, Token.Text.NewLine, '\\n')",
  "(20077, Token.Text.Whitespace, '\\t')",
  "(20078, Token.Text, 'if')",
  "(20080, Token.Text.Whitespace, ' ')",
  "(20081, Token.Text, '$_libquadmath;')",
  "(20095, Token.Text.Whitespace, ' ')",
  "(20096, Token.Text, 'then')",
  "(20100, Token.Text.NewLine, '\\n')",
  "(20101, Token.Text.Whitespace, '\\t\\t')",
  "(20103, Token.Text, 'mv')",
  "(20105, Token.Text.Whitespace, ' ')",
  "(20106, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20115, Token.Text, '/usr/lib/libquadmath.a')",
  "(20137, Token.Text.Whitespace, ' ')",
  "(20138, Token.Text, '\\\\')",
  "(20139, Token.Text.NewLine, '\\n')",
  "(20140, Token.Text.Whitespace, '\\t\\t\\t')",
  "(20143, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20152, Token.Text, '/usr/lib/libquadmath.so')",
  "(20175, Token.Text.Whitespace, ' ')",
  "(20176, Token.Text, '\\\\')",
  "(20177, Token.Text.NewLine, '\\n')",
  "(20178, Token.Text.Whitespace, '\\t\\t\\t')",
  "(20181, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20193, Token.Text, '/usr/lib/')",
  "(20202, Token.Text.NewLine, '\\n')",
  "(20203, Token.Text.Whitespace, '\\t')",
  "(20204, Token.Text, 'fi')",
  "(20206, Token.Text.NewLine, '\\n')",
  "(20207, Token.Text.Whitespace, '\\t')",
  "(20208, Token.Text, 'mv')",
  "(20210, Token.Text.Whitespace, ' ')",
  "(20211, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20220, Token.Text, '/$_gcclibdir/finclude')",
  "(20241, Token.Text.Whitespace, ' ')",
  "(20242, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20254, Token.Text, '/$_gcclibdir/')",
  "(20267, Token.Text.NewLine, '\\n')",
  "(20268, Token.Text.Whitespace, '\\t')",
  "(20269, Token.Text, 'mv')",
  "(20271, Token.Text.Whitespace, ' ')",
  "(20272, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20281, Token.Text, '/$_gcclibexec/f951')",
  "(20299, Token.Text.Whitespace, ' ')",
  "(20300, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20312, Token.Text, '/$_gcclibexec')",
  "(20325, Token.Text.NewLine, '\\n')",
  "(20326, Token.Text.Whitespace, '\\t')",
  "(20327, Token.Text, 'mv')",
  "(20329, Token.Text.Whitespace, ' ')",
  "(20330, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20339, Token.Text, '/usr/lib/libgfortran.spec')",
  "(20364, Token.Text.Whitespace, ' ')",
  "(20365, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20377, Token.Text, '/$_gcclibdir')",
  "(20389, Token.Text.NewLine, '\\n')",
  "(20390, Token.Text, '}')",
  "(20391, Token.Text.NewLine, '\\n\\n')",
  "(20393, Token.Text, 'libgnat()')",
  "(20402, Token.Text.Whitespace, ' ')",
  "(20403, Token.Text, '{')",
  "(20404, Token.Text.NewLine, '\\n')",
  "(20405, Token.Text.Whitespace, '\\t')",
  "(20406, Token.Text, 'pkgdesc=\"GNU')",
  "(20418, Token.Text.Whitespace, ' ')",
  "(20419, Token.Text, 'Ada')",
  "(20422, Token.Text.Whitespace, ' ')",
  "(20423, Token.Text, 'runtime')",
  "(20430, Token.Text.Whitespace, ' ')",
  "(20431, Token.Text, 'shared')",
  "(20437, Token.Text.Whitespace, ' ')",
  "(20438, Token.Text, 'libraries\"')",
  "(20448, Token.Text.NewLine, '\\n')",
  "(20449, Token.Text.Whitespace, '\\t')",
  "(20450, Token.Text, 'depends=')",
  "(20458, Token.Text.NewLine, '\\n\\n')",
  "(20460, Token.Text.Whitespace, '\\t')",
  "(20461, Token.Text, 'mkdir')",
  "(20466, Token.Text.Whitespace, ' ')",
  "(20467, Token.Text, '-p')",
  "(20469, Token.Text.Whitespace, ' ')",
  "(20470, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20482, Token.Text, '/usr/lib')",
  "(20490, Token.Text.NewLine, '\\n')",
  "(20491, Token.Text.Whitespace, '\\t')",
  "(20492, Token.Text, 'mv')",
  "(20494, Token.Text.Whitespace, ' ')",
  "(20495, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20504, Token.Text, '/usr/lib/libgna*.so')",
  "(20523, Token.Text.Whitespace, ' ')",
  "(20524, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20536, Token.Text, '/usr/lib/')",
  "(20545, Token.Text.NewLine, '\\n')",
  "(20546, Token.Text, '}')",
  "(20547, Token.Text.NewLine, '\\n\\n')",
  "(20549, Token.Text, 'libgnatstatic()')",
  "(20564, Token.Text.Whitespace, ' ')",
  "(20565, Token.Text, '{')",
  "(20566, Token.Text.NewLine, '\\n')",
  "(20567, Token.Text.Whitespace, '\\t')",
  "(20568, Token.Text, 'pkgdesc=\"GNU')",
  "(20580, Token.Text.Whitespace, ' ')",
  "(20581, Token.Text, 'Ada')",
  "(20584, Token.Text.Whitespace, ' ')",
  "(20585, Token.Text, 'static')",
  "(20591, Token.Text.Whitespace, ' ')",
  "(20592, Token.Text, 'libraries\"')",
  "(20602, Token.Text.NewLine, '\\n')",
  "(20603, Token.Text.Whitespace, '\\t')",
  "(20604, Token.Text, 'depends=')",
  "(20612, Token.Text.NewLine, '\\n\\n')",
  "(20614, Token.Text.Whitespace, '\\t')",
  "(20615, Token.Text, 'mkdir')",
  "(20620, Token.Text.Whitespace, ' ')",
  "(20621, Token.Text, '-p')",
  "(20623, Token.Text.Whitespace, ' ')",
  "(20624, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20636, Token.Text, '/usr/lib')",
  "(20644, Token.Text.NewLine, '\\n')",
  "(20645, Token.Text.Whitespace, '\\t')",
  "(20646, Token.Text, 'mv')",
  "(20648, Token.Text.Whitespace, ' ')",
  "(20649, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20658, Token.Text, '/usr/lib/libgna*.a')",
  "(20676, Token.Text.Whitespace, ' ')",
  "(20677, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20689, Token.Text, '/usr/lib/')",
  "(20698, Token.Text.NewLine, '\\n')",
  "(20699, Token.Text, '}')",
  "(20700, Token.Text.NewLine, '\\n\\n')",
  "(20702, Token.Text, 'gnat()')",
  "(20708, Token.Text.Whitespace, ' ')",
  "(20709, Token.Text, '{')",
  "(20710, Token.Text.NewLine, '\\n')",
  "(20711, Token.Text.Whitespace, '\\t')",
  "(20712, Token.Text, 'pkgdesc=\"Ada')",
  "(20724, Token.Text.Whitespace, ' ')",
  "(20725, Token.Text, 'support')",
  "(20732, Token.Text.Whitespace, ' ')",
  "(20733, Token.Text, 'for')",
  "(20736, Token.Text.Whitespace, ' ')",
  "(20737, Token.Text, 'GCC\"')",
  "(20741, Token.Text.NewLine, '\\n')",
  "(20742, Token.Text.Whitespace, '\\t')",
  "(20743, Token.Text, 'depends=\"gcc=$_gccrel\"')",
  "(20765, Token.Text.NewLine, '\\n')",
  "(20766, Token.Text.Whitespace, '\\t')",
  "(20767, Token.Text, 'provides=\"$pkgname-gnat-bootstrap\"')",
  "(20801, Token.Text.NewLine, '\\n')",
  "(20802, Token.Text.Whitespace, '\\t')",
  "(20803, Token.Text, '[')",
  "(20804, Token.Text.Whitespace, ' ')",
  "(20805, Token.Literal.String.Double, '\"$CHOST\"')",
  "(20813, Token.Text.Whitespace, ' ')",
  "(20814, Token.Text, '=')",
  "(20815, Token.Text.Whitespace, ' ')",
  "(20816, Token.Literal.String.Double, '\"$CTARGET\"')",
  "(20826, Token.Text.Whitespace, ' ')",
  "(20827, Token.Text, ']')",
  "(20828, Token.Text.Whitespace, ' ')",
  "(20829, Token.Text, '&&')",
  "(20831, Token.Text.Whitespace, ' ')",
  "(20832, Token.Text, 'depends=\"$depends')",
  "(20849, Token.Text.Whitespace, ' ')",
  "(20850, Token.Text, 'libgnat=$_gccrel\"')",
  "(20867, Token.Text.NewLine, '\\n\\n')",
  "(20869, Token.Text.Whitespace, '\\t')",
  "(20870, Token.Text, 'mkdir')",
  "(20875, Token.Text.Whitespace, ' ')",
  "(20876, Token.Text, '-p')",
  "(20878, Token.Text.Whitespace, ' ')",
  "(20879, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20891, Token.Text, '/$_gcclibexec')",
  "(20904, Token.Text.Whitespace, ' ')",
  "(20905, Token.Text, '\\\\')",
  "(20906, Token.Text.NewLine, '\\n')",
  "(20907, Token.Text.Whitespace, '\\t\\t')",
  "(20909, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20921, Token.Text, '/$_gcclibdir')",
  "(20933, Token.Text.Whitespace, ' ')",
  "(20934, Token.Text, '\\\\')",
  "(20935, Token.Text.NewLine, '\\n')",
  "(20936, Token.Text.Whitespace, '\\t\\t')",
  "(20938, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(20950, Token.Text, '/usr/bin')",
  "(20958, Token.Text.NewLine, '\\n')",
  "(20959, Token.Text.Whitespace, '\\t')",
  "(20960, Token.Text, 'mv')",
  "(20962, Token.Text.Whitespace, ' ')",
  "(20963, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(20972, Token.Text, '/$_gcclibexec/*gnat*')",
  "(20992, Token.Text.Whitespace, ' ')",
  "(20993, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(21005, Token.Text, '/$_gcclibexec/')",
  "(21019, Token.Text.NewLine, '\\n')",
  "(21020, Token.Text.Whitespace, '\\t')",
  "(21021, Token.Text, 'mv')",
  "(21023, Token.Text.Whitespace, ' ')",
  "(21024, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(21033, Token.Text, '/$_gcclibdir/*ada*')",
  "(21051, Token.Text.Whitespace, ' ')",
  "(21052, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(21064, Token.Text, '/$_gcclibdir/')",
  "(21077, Token.Text.NewLine, '\\n')",
  "(21078, Token.Text.Whitespace, '\\t')",
  "(21079, Token.Text, 'mv')",
  "(21081, Token.Text.Whitespace, ' ')",
  "(21082, Token.Literal.String.Double, '\"$pkgdir\"')",
  "(21091, Token.Text, '/usr/bin/*gnat*')",
  "(21106, Token.Text.Whitespace, ' ')",
  "(21107, Token.Literal.String.Double, '\"$subpkgdir\"')",
  "(21119, Token.Text, '/usr/bin/')",
  "(21128, Token.Text.NewLine, '\\n')",
  "(21129, Token.Text, '}')",
  "(21130, Token.Text.NewLine, '\\n\\n')",
  "(21132, Token.Name.Variable, 'sha512sums')",
  "(21142, Token.Operator.Equal, '=')",
  "(21143, Token.Literal.String.Double, '\"0ef281e6633b8bef7ce24d1448ec7b96aef66e414f90821a9a021dcd98eca8895d217d9d95b70fd9c96113689cd026aec951edc356462e439a9350edb4009df6  gcc-10.3.1_git20210424.tar.xz\\nd1e10db83a04c02d99f9f6ce03f949b83ccd013674773dcb08992c604048df6a08bf9bd16f74e3c60ea85fd861fb08c1fa9fe17c304af9bfc9a032b81f1ac9eb  0001-posix_memalign.patch\\na77c7ebd994b5780cc5209f33ace24fc4d04353638dcdb14af192b0be5b0e5be397218ddba40e577af889a267af1aa69c1def474207a6661a37c3f5c15002bcb  0002-gcc-poison-system-directories.patch\\n108ad63f61e61f627a75613605962021c08bbde584f3c0507d6a07c6112487847ce89699d1d80efb9201c4eab3440ba66f2eeb781bd259fdfc9c87b3baee1e27  0003-Turn-on-Wl-z-relro-z-now-by-default.patch\\ndc28895223fe7ce531648225da3cd15e20c26a9be0248fdd66f11efb153647776bdbe8109097d87a087c4443e809a0d425848bdeae1442135c52a13bdd06ef75  0004-Turn-on-D_FORTIFY_SOURCE-2-by-default-for-C-C-ObjC-O.patch\\nce7a5f243072284e767510083c57250dd5f1dcdcae102cf1ecbb06f36ea286b00b1f84dc32e5fdb76bac77b52ef3e4e650cff7cc0d14d94487a40ca9d5605bbd  0005-On-linux-targets-pass-as-needed-by-default-to-the-li.patch\\nf5458adfd23f51fa54fb690ec322552d7cadc3afa5773e13e73832c56832854ff14a73ff480c9990731ce929c5a4df35bc20247239268221b9af40ba37331228  0006-Enable-Wformat-and-Wformat-security-by-default.patch\\n2601b0de5fe402cdd9a3d87c2a3e959154c2ee413989db21fbc232f169b20d94807a1f89ff5ebb650a143d59b4b48187b338832d8de577fa47bfdd1b76313114  0007-Enable-Wtrampolines-by-default.patch\\n3eedfe70c85d963845a658444d8692792a34af8b5e0fa800991bf1e0e2c9ff3196c50f11a284cfaca5d48b4c78b614febf38339918c7fa7a7f4723a1f6bdad16  0008-Disable-ssp-on-nostdlib-nodefaultlibs-and-ffreestand.patch\\n6a4b6843cb27b560ac4327b17718806bac4b602903f696222617148a52e9918144648cc45642293beb7c8fd48eba325c115e1dcaa4adec85e1caff0ea33d2a8a  0009-Ensure-that-msgfmt-doesn-t-encounter-problems-during.patch\\naf174250b4fbcc3664bed51d919695511b538f2f3b65532383591f511bede3d13a1ade29aea66598d6df17f2e931a2d171f01c4e7008b4f468cfb13dc5f2b4cf  0010-Don-t-declare-asprintf-if-defined-as-a-macro.patch\\naabac76659e3fa96fa7b4ee2571672c840c3dd37314f16516038d3934333a42b20442a967afce5a35a326685c3c8ef384fc97dc8f4dae57479038f5431e33c19  0011-libiberty-copy-PIC-objects-during-build-process.patch\\n36702acf0c9b34adb0b23b74167e5358c706246cc88ce569d4462555bb48288d5d633298aa447ef023c6f75de86dfa7d4ebbf3c43593e1279837ebd47061be0f  0012-libitm-disable-FORTIFY.patch\\n79912633ee707c60c66abf6ee16159db3357e4e75d4254f7f38cbc0119c2adfcfa2b8c6b1df3885526d68e49f88e2a0c87969a784ed8a1025a680a4f18acd06c  0013-libgcc_s.patch\\nc8c6f4e967afb5d4a9eccd917f6338a61547cc2fabbf56b25e27220b4f3c85f5002477bf2f9d05a911185cee8dcba3a12d3ad24c0d7b1d3b67a3a53bfea702c6  0014-nopie.patch\\nd8d8556a6192d7695e1aeb1e64bf98a02b068c427442dd9c23d2b9a863c504e577f35e0890b5f0a184c687ce9315cecff3d2e0bb82f19531a493efb72b54cfe7  0015-libffi-use-__linux__-instead-of-__gnu_linux__-for-mu.patch\\nb3fb29187561fef84b6eb0b35a582c79833203f689e5bf884146cd9a71ec407e0e3b27b0bd4953143d00879ce32331e92741e1c7229ca291ebf13dfd8f5d409c  0016-dlang-update-zlib-binding.patch\\n2a03683d5e00cc65f8ebc83638953dff89981069943169874df03f4f3a22348b960780250d9240505acf5b1bfbe154d57d14f310f29a94b76404f50611da9000  0017-dlang-fix-fcntl-on-mips-add-libucontext-dep.patch\\n3df60839e5337fccdd228ebf753fb0dbf672aefca5f3f16329b99c813b907f44e1ce4948ce7f692dca316eb307b83ae9f5028cf1875eb3c9fee85b2dee7bfe83  0018-ada-fix-shared-linking.patch\\nbd60be22341b508b4b5cb66eb48723d0f48770745352c60cfe146efa4d18ec58cccbb37f85b98dc0432e52bb5dc8dc1f28b3a3ca50d1ca6db68eb38df970e5aa  0019-build-fix-CXXFLAGS_FOR_BUILD-passing.patch\\n333f9c7a1935dc4f29783fa31c254bda6339c30ee770eb30d585ac422cd0f69701b5d988f9493471e4c83cf20937050f33320852a83ed6dfb2e739ee3539ca0e  0020-add-fortify-headers-paths.patch\\n053b0339936cc0469e8708ccc086fa1dabe8572199530e1e78a93551340dd35467a07273e19d2cbc7fe915b7a5bdf95c128718ba0518b67b9668ef0316b7aa06  0021-Alpine-musl-package-provides-libssp_nonshared.a.-We-.patch\\n7b3d849cdbdee5855918db4114de8f989ec5d612cddc7551eb63ca2878e69e3566353bbfafa9205a161ffd51c5aedd367de6ad82cd5ebf6cb28c716a8d447bb5  0022-DP-Use-push-state-pop-state-for-gold-as-well-when-li.patch\\n6b3c0fa81cebaf32948657bddaac99024f45c2fc19ac8bc504f3773b6458099b9907e310e162952973bdd41c9fc011e7a50bc8fa86cc0ebec9dd4c69830a012b  0023-Pure-64-bit-MIPS.patch\\nda634721fa9cba18e4f527b2cdbe6896c0251ce43865c6fbf29a7281d766c3a8f98e2ddd345b801c25b7ceb85880150ae9cc422aa8891b1fc28a3dc40bcd3114  0024-use-pure-64-bit-configuration-where-appropriate.patch\\n64b58a273993224f93c68cddfacc1b3da6b0900b2983f27f8db39b4375afa97cce564739c8fc320666821f6de526e54acbc4920c7e16612303b3d25aed34d5f1  0025-always-build-libgcc_eh.a.patch\\n6004be7d683993c175f819e1d62767b6ca2b80643917bb584ffffe2aee9fd5ad9745f91651ad5d1d00aed390e7346262b5c28bec356efd9ff1c85e4b54bcfe2e  0026-ada-libgnarl-compatibility-for-musl.patch\\n7a3ce107cc55356ac46f3a217eea1cf9cdddd43fd3fede048a26e5da2280f0af9f806392942d2896a0f841ca0b0b0eaceb4e20f09edee7a743b515d3553fc8b3  0027-ada-musl-support-fixes.patch\\n0cd8303456ec5479942970679352fe8bcd259b8b04bffba458545abdfac87163a8fb8e55c3aa505c516af8fd0a1bfb5f2ee4c6027ec9bcb0b0d3564469a18e23  0028-gcc-go-Use-_off_t-type-instead-of-_loff_t.patch\\n6cc82829bb8bf8ffb473e4f2f9c2f657a4078290fc7c3208d199c0b07c2c3a7575a0c423e52fc02fd96c81158ab2e7ad33ccb651523ba80e00dee9e503d19c6d  0029-gcc-go-Don-t-include-sys-user.h.patch\\n868e0cf5d32412c557d7835e03eb23621745179e77c87d69b810f8ec968cf80606cb5cb8085e5e125f08e809d5e3ff50c4de869d94caca5f4257669237a29b92  0030-gcc-go-Fix-ucontext_t-on-PPC64.patch\\n257814e2dc39bf01dedc3efe9f50029bdc230e112a0e739d0547896212b87bcdb9d40d4632a237137c91e2d9605b2256ebd45ee005920a5c4e401e699ce69f46  0031-gcc-go-Fix-handling-of-signal-34-on-musl.patch\\n0e33205e6ef0b58d12eb80d3fd6ce7361e9e3a86ba2ae781745133be1f0fea6a1e95fd58331765f6bb599f4ad355224c954db4fbaf804b9e4c0ea01dbaae1638  0032-gcc-go-Use-int64-type-as-offset-argument-for-mmap.patch\\nbb1e3bbea65644435134910e04b8d4de27642026371b19f4faf51b90e32af08e7181b3198e936b3626cba2126f8f9182ce39f6b8c8849b6b27f56a1c45e4f8c5  0033-gcc-go-Fix-st_-a-m-c-tim-fields-in-generated-sysinfo.patch\\n0758417ab682ee6d4b75f1ba2d0c1f568e115a16625eb664066c1862178a43ae717396c5d61a355a08fc01929041abebbf33bc58176a0b78ab384aba7d2ed8ba  0034-gcc-go-signal-34-is-special-on-musl-libc.patch\\nd0b132d1bb9a455af23829a9da4ff89c27eff3f642e2280712667753d552fc214424470cad4cecd0ae39052553b6a22d7dc7a20eebfd1cb976d98552b00b9dcd  0035-gcc-go-Prefer-_off_t-over-_off64_t.patch\\na21844975ff13317ed7985b5f5b257a0bc1dd961360b6a6f36bf52151b8edf5ecf38fbdd47cb2c28c13ed3dfbf4ca112d91d81373fd3e2c5992aba35296645af  0036-gcc-go-undef-SETCONTEXT_CLOBBERS_TLS-in-proc.c.patch\\n0217263fc1fcfbde92fcebfc626b2cf0ba30e704b4fbe5a11f55d9ca5b579cceac3ba9ec45e7f53cd8805678b69fb6e5ab1295e67938b9c83f82e44ddebd0a85  0037-gcc-go-link-to-libucontext.patch\\n8a90ce84d493bfcdcad4cb1a02a320dca18e8178e717451087501b059ca00ab8f6b73d628bcb3f49c5c6702b7222b063d3c0803d093e2c6f58820b6aa578969e  0038-gcc-go-Disable-printing-of-unaccessible-ppc64-struct.patch\\na3e7362fa95d5ffa56b0d8ea73f6f8e867409ae3b85d041aa0591dba093c5bb1d30f3294151c5142e8d1df91f4d138e9f4484009b8a675c8fc3b754a34c7648e  0039-CRuntime_Musl-Support-v1.2.0-for-32-bits.patch\\ndc7a8f6dc885dc34229128a716531b375ec4e8247a8522adb623c5a6b39db60ff471436b360a25f0310ee16fe1a6ec85ff64398cbae2677534626972ac01db22  0040-configure-Add-enable-autolink-libatomic-use-in-LINK_.patch\\n046bfe95d6de9df148e6c410b5d23a49c488ab41d95e599fc381a2b7d190e6d7d99de59fa8cd8c3a711ee2310426f3cdcd323cf887c8d11543e119d205659b6a  0041-Use-generic-errstr.go-implementation-on-musl.patch\"')",
  "(28642, Token.Text.NewLine, '\\n')"
]