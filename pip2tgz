#!/usr/bin/env python

import os
import sys
import shutil
from subprocess import check_call

if len(sys.argv) < 3:
    import textwrap
    print textwrap.dedent("""
        usage: %s OUTPUT_DIRECTORY PACKAGE_NAMES

        Where PACKAGE_NAMES are any names accepted by pip (ex, `foo`,
        `foo==1.2`, `-r requirements.txt`).
        
        %s will download all packages required to install PACKAGE_NAMES and
        save them to sanely-named tarballs in OUTPUT_DIRECTORY
    """ %(sys.argv[0], sys.argv[0]))
    sys.exit(1)

outdir = os.path.abspath(sys.argv[1])
if not os.path.exists(outdir):
    os.path.mkdir(outdir)

tempdir = os.path.join(outdir, "_pip2tgz_temp")
if os.path.exists(tempdir):
    shutil.rmtree(tempdir)
os.mkdir(tempdir)

bundle_zip = os.path.join(tempdir, "bundle.zip")
check_call(["pip", "bundle", "-b", tempdir, bundle_zip] + sys.argv[2:])

os.chdir(tempdir)
check_call(["unzip", "bundle.zip", "pip-manifest.txt"])

for line in open("pip-manifest.txt"):
    line = line.strip()
    if not line or line.startswith("#"):
        continue
    pkg_version = line.split("==")
    if len(pkg_version) != 2:
        raise ValueError("surprising line: %r" %(line, ))
    pkg, version = pkg_version
    version = version.replace("-", "_")
    old_input_dir = pkg
    new_input_dir = "%s-%s" %(pkg, version)
    os.rename(old_input_dir, new_input_dir)
    output_name = os.path.join("..", new_input_dir + ".tar.gz")
    check_call(["tar", "-czvf", output_name, new_input_dir])

os.chdir(outdir)
shutil.rmtree(tempdir)
