#!/usr/bin/env python

import os
import sys
import shutil

def file_to_package(file):
    """ Returns the package name for a given file.
        >>> file_to_package("foo-1.2.3_rc1.tar.gz")
        ('foo', '1.2.3-rc1.tar.gz')
        >>> file_to_package("foo-bar-1.2.tgz")
        ('foo-bar', '1.2.tgz')
        >>> """
    split = file.rsplit("-", 1)
    if len(split) != 2:
        msg = ("unexpected file name: %r (not in "
               "'package-name-version.xxx' format)") %(file, )
        raise ValueError(msg)
    return (split[0], split[1].replace("_", "-"))

def main():
    if len(sys.argv) != 2:
        print "usage: %s PACKAGE_DIR" %(sys.argv[0], )
        print "Creates the directory PACKAGE_DIR/simple/ and populates it"
        print "with the directory structure required to use with pip's"
        print "--index-url"
        print
        print "Assumes that PACKAGE_DIR contains a bunch of archives"
        print "named 'package-name-version.ext' (ex 'foo-2.1.tar.gz'"
        print "or 'foo-bar-1.3rc1.bz2')"
        print
        print "This makes the most sense if PACKAGE_DIR is somewhere"
        print "inside a webserver's inside htdocs directory."
        sys.exit(1)
    pkgdir = sys.argv[1]
    if not os.path.isdir(pkgdir):
        raise ValueError("no such directory: %r" %(pkgdir, ))
    pkgdirpath = lambda *x: os.path.join(pkgdir, *x)

    shutil.rmtree(pkgdirpath("simple"), ignore_errors=True)
    os.mkdir(pkgdirpath("simple"))

    for file in os.listdir(pkgdir):
        pkg_filepath = os.path.join(pkgdir, file)
        if not os.path.isfile(pkg_filepath):
            continue
        pkg_basename = os.path.basename(file)
        pkg_name, pkg_rest = file_to_package(pkg_basename)
        pkg_dir = pkgdirpath("simple", pkg_name)
        if not os.path.exists(pkg_dir):
            os.mkdir(pkg_dir)
        pkg_new_basename = "-".join([pkg_name, pkg_rest])
        os.link(pkg_filepath, os.path.join(pkg_dir, pkg_new_basename))

if __name__ == "__main__":
    main()
